.TH std::basic_string_view<CharT,Traits>::find_last_not_of 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_string_view<CharT,Traits>::find_last_not_of \- std::basic_string_view<CharT,Traits>::find_last_not_of

.SH Synopsis

constexpr size_type                                                         \fB(1)\fP \fI(since C++17)\fP
find_last_not_of(basic_string_view v, size_type pos = npos) const noexcept;
constexpr size_type                                                         \fB(2)\fP \fI(since C++17)\fP
find_last_not_of(CharT c, size_type pos = npos) const noexcept;
constexpr size_type                                                         \fB(3)\fP \fI(since C++17)\fP
find_last_not_of(const CharT* s, size_type pos, size_type count) const;
constexpr size_type                                                         \fB(4)\fP \fI(since C++17)\fP
find_last_not_of(const CharT* s, size_type pos = npos) const;

Finds the last character not equal to any of the characters in the given character sequence.
1) Finds the last character not equal to any of the characters of v in this view, starting at position pos.
2) Equivalent to find_last_not_of(basic_string_view(std::addressof(c), 1), pos).
3) Equivalent to find_last_not_of(basic_string_view(s, count), pos).
4) Equivalent to find_last_not_of(basic_string_view(s), pos).

.SH Parameters


v     - view to search for
pos   - position at which to start the search
count - length of the string of characters to compare
s     - pointer to a string of characters to compare
ch    - character to compare


.SH Return value

Position of the last character not equal to any of the characters in the given string, or npos if no such character is found.

.SH Complexity

O(size() * v.size()) at worst.

.SH See also


                  find characters in the view
find              \fI(public member function)\fP
                  find the last occurrence of a substring
rfind             \fI(public member function)\fP
                  find first occurrence of characters
find_first_of     \fI(public member function)\fP
                  find last occurrence of characters
find_last_of      \fI(public member function)\fP
                  find first absence of characters
find_first_not_of \fI(public member function)\fP




