.TH std::literals::chrono_literals::operator""y 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::literals::chrono_literals::operator""y \- std::literals::chrono_literals::operator""y

.SH Synopsis
   Defined in header <chrono>
   constexpr std::chrono::year operator ""y(unsigned long long y) noexcept; \fB(1)\fP \fI(since C++20)\fP

   Forms a std::chrono::year literal representing a year in the proleptic Gregorian calendar.

.SH Parameters

   y - the year value

.SH Return value

   A std::chrono::year initialized from int(y). If y > 32767, the stored value is unspecified.

.SH Possible implementation

   constexpr std::chrono::year operator ""y(unsigned long long y) noexcept
   {
       return std::chrono::year(int(y));
   }

.SH Notes

   This operator is declared in the namespace std::literals::chrono_literals, where both literals and chrono_literals are inline namespaces. Access to this operator can be gained with using namespace std::literals, using namespace std::chrono_literals, and using namespace std::literals::chrono_literals.

   In addition, within the namespace std::chrono, the directive using namespace literals::chrono_literals; is provided by the standard library, so that if a programmer uses using namespace std::chrono; to gain access to the classes in the chrono library, the corresponding literal operators become visible as well.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   constructor   constructs a year
                 \fI(public member function of std::chrono::year)\fP
