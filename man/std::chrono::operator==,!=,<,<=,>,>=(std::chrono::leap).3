.TH std::chrono::operator==,!=,<,<=,>,>=(std::chrono::leap) 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::operator==,!=,<,<=,>,>=(std::chrono::leap) \- std::chrono::operator==,!=,<,<=,>,>=(std::chrono::leap)

.SH Synopsis

  constexpr bool operator==(const std::chrono::leap& x, const std::chrono::leap& y) noexcept; \fB(1)\fP  \fI(since C++20)\fP
  constexpr bool operator!=(const std::chrono::leap& x, const std::chrono::leap& y) noexcept; \fB(2)\fP  \fI(since C++20)\fP
  constexpr bool operator< (const std::chrono::leap& x, const std::chrono::leap& y) noexcept; \fB(3)\fP  \fI(since C++20)\fP
  constexpr bool operator> (const std::chrono::leap& x, const std::chrono::leap& y) noexcept; \fB(4)\fP  \fI(since C++20)\fP
  constexpr bool operator<=(const std::chrono::leap& x, const std::chrono::leap& y) noexcept; \fB(5)\fP  \fI(since C++20)\fP
  constexpr bool operator>=(const std::chrono::leap& x, const std::chrono::leap& y) noexcept; \fB(6)\fP  \fI(since C++20)\fP
  template< class Duration >
  constexpr bool operator==(const std::chrono::leap& x,                                       \fB(7)\fP  \fI(since C++20)\fP
  const std::chrono::sys_time<Duration>& y) noexcept;
  template< class Duration >
  constexpr bool operator==(const std::chrono::sys_time<Duration>& x,                         \fB(8)\fP  \fI(since C++20)\fP
  const std::chrono::leap& y) noexcept;
  template< class Duration >
  constexpr bool operator!=(const std::chrono::leap& x,                                       \fB(9)\fP  \fI(since C++20)\fP
  const std::chrono::sys_time<Duration>& y) noexcept;
  template< class Duration >
  constexpr bool operator!=(const std::chrono::sys_time<Duration>& x,                         \fB(10)\fP \fI(since C++20)\fP
  const std::chrono::leap& y) noexcept;
  template< class Duration >
  constexpr bool operator< (const std::chrono::leap& x,                                       \fB(11)\fP \fI(since C++20)\fP
  const std::chrono::sys_time<Duration>& y) noexcept;
  template< class Duration >
  constexpr bool operator< (const std::chrono::sys_time<Duration>& x,                         \fB(12)\fP \fI(since C++20)\fP
  const std::chrono::leap& y) noexcept;
  template< class Duration >
  constexpr bool operator> (const std::chrono::leap& x,                                       \fB(13)\fP \fI(since C++20)\fP
  const std::chrono::sys_time<Duration>& y) noexcept;
  template< class Duration >
  constexpr bool operator> (const std::chrono::sys_time<Duration>& x,                         \fB(14)\fP \fI(since C++20)\fP
  const std::chrono::leap& y) noexcept;
  template< class Duration >
  constexpr bool operator<=(const std::chrono::leap& x,                                       \fB(15)\fP \fI(since C++20)\fP
  const std::chrono::sys_time<Duration>& y) noexcept;
  template< class Duration >
  constexpr bool operator<=(const std::chrono::sys_time<Duration>& x,                         \fB(16)\fP \fI(since C++20)\fP
  const std::chrono::leap& y) noexcept;
  template< class Duration >
  constexpr bool operator>=(const std::chrono::leap& x,                                       \fB(17)\fP \fI(since C++20)\fP
  const std::chrono::sys_time<Duration>& y) noexcept;
  template< class Duration >
  constexpr bool operator>=(const std::chrono::sys_time<Duration>& x,                         \fB(18)\fP \fI(since C++20)\fP
  const std::chrono::leap& y) noexcept;

  Compares the date and time represented by the objects x and y.

.SH Return value

  1) x.date() == y.date()
  2) x.date() != y.date()
  3) x.date() < y.date()
  4) x.date() > y.date()
  5) x.date() <= y.date()
  6) x.date() >= y.date()
  7) x.date() == y
  8) x == y.date()
  9) x.date() != y
  10) x != y.date()
  11) x.date() < y
  12) x < y.date()
  13) x.date() > y
  14) x > y.date()
  15) x.date() <= y
  16) x <= y.date()
  17) x.date() >= y
  18) x >= y.date()



