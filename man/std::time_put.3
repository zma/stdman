.TH std::time_put 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::time_put \- std::time_put

.SH Synopsis

  Defined in header <locale>
  template<
  class CharT,
  class OutputIt = std::ostreambuf_iterator<CharT>
  > class time_put;

  Class template std::time_put encapsulates date and time formatting rules. The I/O manipulator std::put_time uses the std::time_put facet of the I/O stream's locale to generate text representation of an std::tm object.
   std-time put-inheritance.svg
  Inheritance diagram

.SH Type requirements


  -
  OutputIt must meet the requirements of LegacyOutputIterator.


.SH Specializations

  Two standalone (locale-independent) full specializations and two partial specializations are provided by the standard library:

  Defined in header <locale>
  std::time_put<char>              creates narrow string representations of date and time
  std::time_put<wchar_t>           creates wide string representations of date and time
  std::time_put<char, OutputIt>    creates narrow string representations of date and time using custom output iterator
  std::time_put<wchar_t, OutputIt> creates wide string representations of date and time using custom output iterator

  In addition, every locale object constructed in a C++ program implements its own (locale-specific) versions of these specializations.

.SH Member types


  Member type Definition
  char_type   CharT
  iter_type   OutputIt


.SH Member functions


                constructs a new time_put facet
  constructor   \fI(public member function)\fP
                destructs a time_put facet
  destructor    \fI(protected member function)\fP
                invokes do_put
  put           \fI(public member function)\fP


.SH Member objects


                            id of the locale
  static std::locale::id id \fI(public member object)\fP


.SH Protected member functions



  do_put    formats date/time and writes to output stream
            \fI(virtual protected member function)\fP
  \fB[virtual]\fP


.SH Example

  
// Run this code

    #include <iostream>
    #include <ctime>
    #include <iomanip>
    #include <codecvt>

    int main()
    {
        std::time_t t = std::time(NULL);
        std::wbuffer_convert<std::codecvt_utf8<wchar_t>> conv(std::cout.rdbuf());
        std::wostream out(&conv);
        out.imbue(std::locale("ja_JP.utf8"));
        // this I/O manipulator std::put_time uses std::time_put<wchar_t>
        out << std::put_time(std::localtime(&t), L"%A %c") << '\\n';
    }

.SH Output:

    水曜日 2011年11月09日 12時32分05秒


.SH See also


                  represents the system-supplied std::time_put for the named locale
  time_put_byname \fI(class template)\fP
                  parses time/date values from an input character sequence into struct std::tm
  time_get        \fI(class template)\fP

  put_time        formats and outputs a date/time value according to the specified format
                  \fI(function template)\fP
  \fI(C++11)\fP




