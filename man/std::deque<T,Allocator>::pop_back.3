.TH std::deque<T,Allocator>::pop_back 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::deque<T,Allocator>::pop_back \- std::deque<T,Allocator>::pop_back

.SH Synopsis

  void pop_back();

  Removes the last element of the container.
  Calling pop_back on an empty container is undefined.

  Iterators and references to the erased element are invalidated. It is unspecified whether the past-the-end iterator is invalidated. Other references and iterators are not affected. \fI(until C++11)\fP
  Iterators and references to the erased element are invalidated. The past-the-end iterator is also invalidated. Other references and iterators are not affected.                      \fI(since C++11)\fP


.SH Parameters

  \fI(none)\fP

.SH Return value

  \fI(none)\fP

.SH Complexity

  Constant.

.SH Exceptions

  \fI(none)\fP

.SH Example

  
// Run this code

    #include <deque>
    #include <iostream>

    template<typename T>
    void print(T const & xs)
    {
        std::cout << "[ ";
        for(auto const & x : xs) {
            std::cout << x << ' ';
        }
        std::cout << "]\\n";
    }

    int main()
    {
        std::deque<int> numbers;

        print(numbers);

        numbers.push_back(5);
        numbers.push_back(3);
        numbers.push_back(4);

        print(numbers);

        numbers.pop_back();

        print(numbers);
    }

.SH Output:

    [ ]
    [ 5 3 4 ]
    [ 5 3 ]



.SH See also


            removes the first element
  pop_front \fI(public member function)\fP
            adds an element to the end
  push_back \fI(public member function)\fP




