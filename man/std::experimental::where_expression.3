.TH std::experimental::where_expression 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::where_expression \- std::experimental::where_expression

.SH Synopsis
   Defined in header <experimental/simd>
   template < class M, class V >
   class where_expression;

   The class template where_expression abstracts the notion of selected elements of a given non-const object of arithmetic or data-parallel type. Selected elements signifies the elements data[i] for all i ∈ {j ∈ ℕ0 | j < M::size() ⋀ mask[j]}.

.SH Template parameters

   M - The mask type
   V - The value type M applies on

   Valid combinations of (M, V) are: (simd_mask<T, Abi>, simd<T, Abi>), (simd_mask<T, Abi>, simd_mask<T, Abi>), (bool, T).

.SH Member functions

   operator=   assigns to selected positions
               \fI(public member function)\fP
   operator+=
   operator-=
   operator*=
   operator/=
   operator%=  compound operators
   operator&=  \fI(public member function)\fP
   operator|=
   operator^=
   operator<<=
   operator>>=
   operator++  increment and decrement operators
   operator--  \fI(public member function)\fP
   copy_from   loads from address to selected positions
               \fI(public member function)\fP

.SH Example
