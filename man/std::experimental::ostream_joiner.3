.TH std::experimental::ostream_joiner 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::ostream_joiner \- std::experimental::ostream_joiner

.SH Synopsis

Defined in header <experimental/iterator>
template< class DelimT,
class CharT = char,                        (library fundamentals TS v2)
class Traits = std::char_traits<CharT>>
class ostream_joiner;

std::experimental::ostream_joiner is a single-pass LegacyOutputIterator that writes successive objects into the std::basic_ostream object for which it was constructed, using operator<<, separated by a delimiter. The delimiter is written to the output stream between every two objects that are written. The write operation is performed when the iterator (whether dereferenced or not) is assigned to. Incrementing the ostream_joiner is a no-op.
In a typical implementation, the only data members of ostream_joiner are a pointer to the associated std::basic_ostream, the delimiter, and a bool member that indicates whether the next write is for the first element in the sequence.
Compared to std::ostream_iterator, ostream_joiner prints the delimiter sequence one fewer time, and is not templated on the type of the object to be printed.

.SH Member types


Member type       Definition
char_type         CharT
traits_type       Traits
ostream_type      std::basic_ostream<CharT, Traits>
value_type        void
difference_type   void
pointer           void
reference         void
iterator_category std::output_iterator_tag


.SH Member functions


                      constructs a new ostream_joiner
constructor           \fI(public member function)\fP

destructor            destructs an ostream_joiner
                      \fI(public member function)\fP
(implicitly declared)
                      writes a object to the associated output sequence
operator=             \fI(public member function)\fP
                      no-op
operator*             \fI(public member function)\fP
                      no-op
operator++            \fI(public member function)\fP
operator++(int)


.SH Non-member functions


                    creates a ostream_joiner object, deducing the template's type arguments from the function arguments
make_ostream_joiner \fI(function template)\fP


.SH Example


// Run this code

  #include <algorithm>
  #include <experimental/iterator>
  #include <iostream>
  #include <iterator>

  int main()
  {
      int i[] = {1, 2, 3, 4, 5};
      std::copy(std::begin(i),
                std::end(i),
                std::experimental::make_ostream_joiner(std::cout, ", "));
  }

.SH Output:

  1, 2, 3, 4, 5


.SH See also


                    output iterator that writes to std::basic_streambuf
ostreambuf_iterator \fI(class template)\fP
                    output iterator that writes to std::basic_ostream
ostream_iterator    \fI(class template)\fP
                    input iterator that reads from std::basic_istream
istream_iterator    \fI(class template)\fP




