.TH std::stack<T,Container>::emplace 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::stack<T,Container>::emplace \- std::stack<T,Container>::emplace

.SH Synopsis
   template< class... Args >                  \fI(since C++11)\fP
   void emplace( Args&&... args );            \fI(until C++17)\fP
   template< class... Args >                  \fI(since C++17)\fP
   decltype(auto) emplace( Args&&... args );

   Pushes a new element on top of the stack. The element is constructed in-place, i.e. no copy or move operations are performed. The constructor of the element is called with exactly the same arguments as supplied to the function.

   Effectively calls c.emplace_back(std::forward<Args>(args)...);

.SH Parameters

   args - arguments to forward to the constructor of the element

.SH Return value

   \fI(none)\fP                                                                                 \fI(until C++17)\fP
   The value or reference, if any, returned by the above call to Container::emplace_back. \fI(since C++17)\fP

.SH Complexity

   Identical to the complexity of Container::emplace_back.

  Defect reports

   The following behavior-changing defect reports were applied retroactively to previously published C++ standards.

      DR    Applied to                            Behavior as published                                Correct behavior
   LWG 2783 C++17      emplace returned reference, breaking compatibility with pre-C++17 containers returns decltype(auto)

.SH See also

   push inserts element at the top
        \fI(public member function)\fP
   pop  removes the top element
        \fI(public member function)\fP
