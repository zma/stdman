.TH std::experimental::ranges::Readable 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::ranges::Readable \- std::experimental::ranges::Readable

.SH Synopsis

Defined in header <experimental/ranges/iterator>
template < class In >
concept bool Readable =
requires {
typename ranges::value_type_t<In>;
typename ranges::reference_t<In>;                                                    (ranges TS)
typename ranges::rvalue_reference_t<In>;
} &&
CommonReference<ranges::reference_t<In>&&, ranges::value_type_t<In>&> &&
CommonReference<ranges::reference_t<In>&&, ranges::rvalue_reference_t<In>&&> &&
CommonReference<ranges::rvalue_reference_t<In>&&, const ranges::value_type_t<In>&>;

The concept Readable is satisfied by types that are readable by applying operator*, such as pointers, smart pointers, and iterators.



