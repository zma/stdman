.TH std::atomic<T>::exchange 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::atomic<T>::exchange \- std::atomic<T>::exchange

.SH Synopsis

T exchange( T desired, std::memory_order order = std::memory_order_seq_cst ) noexcept;           \fI(since C++11)\fP
T exchange( T desired, std::memory_order order = std::memory_order_seq_cst ) volatile noexcept;

Atomically replaces the underlying value with desired. The operation is read-modify-write operation. Memory is affected according to the value of order.

.SH Parameters


desired - value to assign
order   - memory order constraints to enforce


.SH Return value

The value of the atomic variable before the call.


.SH See also



atomic_exchange
atomic_exchange_explicit atomically replaces the value of the atomic object with non-atomic argument and returns the old value of the atomic
                         \fI(function template)\fP
\fI(C++11)\fP
\fI(C++11)\fP




