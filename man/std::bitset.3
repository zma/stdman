.TH std::bitset 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::bitset \- std::bitset

.SH Synopsis

  Defined in header <bitset>
  template< std::size_t N >
  class bitset;

  The class template bitset represents a fixed-size sequence of N bits. Bitsets can be manipulated by standard logic operators and converted to and from strings and integers.
  bitset meets the requirements of CopyConstructible and CopyAssignable.

.SH Template parameters


  N - the number of bits to allocate storage for


.SH Member types


            proxy class representing a reference to a bit
  reference \fI(class)\fP


.SH Member functions


                constructs the bitset
  constructor   \fI(public member function)\fP
                compares the contents
  operator==    \fI(public member function)\fP
  operator!=

.SH Element access

                accesses specific bit
  operator[]    \fI(public member function)\fP
                accesses specific bit
  test          \fI(public member function)\fP

  all
  any           checks if all, any or none of the bits are set to true
  none          \fI(public member function)\fP

  \fI(C++11)\fP

                returns the number of bits set to true
  count         \fI(public member function)\fP

.SH Capacity

                returns the size number of bits that the bitset can hold
  size          \fI(public member function)\fP

.SH Modifiers


  operator&=    performs binary AND, OR, XOR and NOT
  operator|=    \fI(public member function)\fP
  operator^=
  operator~

  operator<<=   performs binary shift left and shift right
  operator>>=   \fI(public member function)\fP
  operator<<
  operator>>
                sets bits to true or given value
  set           \fI(public member function)\fP
                sets bits to false
  reset         \fI(public member function)\fP
                toggles the values of bits
  flip          \fI(public member function)\fP

.SH Conversions

                returns a string representation of the data
  to_string     \fI(public member function)\fP
                returns an unsigned long integer representation of the data
  to_ulong      \fI(public member function)\fP

  to_ullong     returns an unsigned long long integer representation of the data
                \fI(public member function)\fP
  \fI(C++11)\fP


.SH Non-member functions



  operator&  performs binary logic operations on bitsets
  operator|  \fI(function template)\fP
  operator^
             performs stream input and output of bitsets
  operator<< \fI(function template)\fP
  operator>>


.SH Helper classes



  std::hash<std::bitset> hash support for std::bitset
                         \fI(class template specialization)\fP
  \fI(C++11)\fP


.SH Notes

  If the size of the bitset is not known at compile time, std::vector<bool> or boost::dynamic_bitset may be used.



