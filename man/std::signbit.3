.TH std::signbit 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::signbit \- std::signbit

.SH Synopsis

Defined in header <cmath>
bool signbit( float arg );        \fB(1)\fP \fI(since C++11)\fP
bool signbit( double arg );       \fB(2)\fP \fI(since C++11)\fP
bool signbit( long double arg );  \fB(3)\fP \fI(since C++11)\fP
bool signbit( IntegralType arg ); \fB(4)\fP \fI(since C++11)\fP

1-3) Determines if the given floating point number arg is negative.
4) A set of overloads or a function template accepting the arg argument of any integral_type. Equivalent to \fB(2)\fP (the argument is cast to double).

.SH Parameters


arg - floating point value


.SH Return value

true if arg is negative, false otherwise

.SH Notes

This function detects the sign bit of zeroes, infinities, and NaNs. Along with std::copysign, std::signbit is one of the only two portable ways to examine the sign of a NaN.

.SH Examples


// Run this code

  #include <iostream>
  #include <cmath>

  int main()
  {
      std::cout << std::boolalpha
                << "signbit(+0.0) = " << std::signbit(+0.0) << '\\n'
                << "signbit(-0.0) = " << std::signbit(-0.0) << '\\n';
  }

.SH Output:

  signbit(+0.0) = false
  signbit(-0.0) = true


.SH See also



abs(float)
fabs
fabsf
fabsl      absolute value of a floating point value (|x|)
           \fI(function)\fP


\fI(C++11)\fP
\fI(C++11)\fP

copysign
copysignf
copysignl  copies the sign of a floating point value
           \fI(function)\fP
\fI(C++11)\fP
\fI(C++11)\fP
\fI(C++11)\fP




