.TH std::midpoint 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::midpoint \- std::midpoint

.SH Synopsis
   Defined in header <numeric>
   template< class T >                      \fB(1)\fP \fI(since C++20)\fP
   constexpr T midpoint(T a, T b) noexcept;
   template< class T >                      \fB(2)\fP \fI(since C++20)\fP
   constexpr T* midpoint(T* a, T* b);

   Computes the midpoint of the integers, floating-points, or pointers a and b.

.SH Parameters

   a, b    -    intergers, floating-points, or pointer values
.SH Type requirements
   -
   T must be an arithmetic type other than bool for overload \fB(1)\fP
   -
   T must be a complete object type for overload \fB(2)\fP

.SH Return value

   1) Half the sum of a and b. No overflow occurs. If a and b have integer type and the sum is odd, the result is rounded towards a. If a and b have floating-point type, at most one inexact operation occurs.
   2) If a and b point to, respectively, x[i] and x[j] of the same array object x (for the purpose of pointer arithmetic), returns a pointer to x[i+(j-i)/2] where the division rounds towards zero. If a and b do not point to elements of the same array object, the behavior is undefined.

.SH Exceptions

   Throws no exceptions.

.SH Examples

    This section is incomplete
    Reason: no example
