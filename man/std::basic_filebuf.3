.TH std::basic_filebuf 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_filebuf \- std::basic_filebuf

.SH Synopsis

  Defined in header <fstream>
  template<
  class CharT,
  class Traits = std::char_traits<CharT>
  > class basic_filebuf : public std::basic_streambuf<CharT, Traits>

  std::basic_filebuf is a std::basic_streambuf whose associated character sequence is a file. Both the input sequence and the output sequence are associated with the same file, and a joint file position is maintained for both operations.
  The functions underflow() and overflow()/sync() perform the actual I/O between the file and the get and put areas of the buffer. When CharT is not char, most implementations store multibyte characters in the file and a std::codecvt facet is used to perform wide/multibyte character conversion.
  Two specializations for common character types are also defined:

  Defined in header <streambuf>
  Type     Definition
  filebuf  basic_filebuf<char>
  wfilebuf basic_filebuf<wchar_t>


.SH Member types


  Member type Definition
  char_type   CharT
  traits_type Traits; the program is ill-formed if Traits::char_type is not CharT.
  int_type    Traits::int_type
  pos_type    Traits::pos_type which is required to be std::fpos<Traits::state_type>
  off_type    Traits::off_type


.SH Member functions



.SH Public member functions

                constructs a basic_filebuf object
  constructor   \fI(public member function)\fP

  operator=     assigns a basic_filebuf object
                \fI(public member function)\fP
  \fI(C++11)\fP

  swap          swaps two basic_filebuf objects
                \fI(public member function)\fP
  \fI(C++11)\fP

  destructor    destructs a basic_filebuf object and closes the file if it is open
                \fI(virtual public member function)\fP
  \fB[virtual]\fP
                checks if the associated file is open
  is_open       \fI(public member function)\fP
                opens a file and configures it as the associated character sequence
  open          \fI(public member function)\fP
                flushes the put area buffer and closes the associated file
  close         \fI(public member function)\fP

.SH Protected member functions


  showmanyc     optionally provides the number of characters available for input from the file
                \fI(virtual protected member function)\fP
  \fB[virtual]\fP

  underflow     reads from the associated file
                \fI(virtual protected member function)\fP
  \fB[virtual]\fP

  uflow         reads from the associated file and advances the next pointer in the get area
                \fI(virtual protected member function)\fP
  \fB[virtual]\fP

  pbackfail     backs out the input sequence to unget a character, not affecting the associated file
                \fI(virtual protected member function)\fP
  \fB[virtual]\fP

  overflow      writes characters to the associated file from the put area
                \fI(virtual protected member function)\fP
  \fB[virtual]\fP

  setbuf        provides user-supplied buffer or turns this filebuf unbuffered
                \fI(virtual protected member function)\fP
  \fB[virtual]\fP

  seekoff       repositions the file position, using relative addressing
                \fI(virtual protected member function)\fP
  \fB[virtual]\fP

  seekpos       repositions the file position, using absolute addressing
                \fI(virtual protected member function)\fP
  \fB[virtual]\fP

  sync          writes characters to the associated file from the put area
                \fI(virtual protected member function)\fP
  \fB[virtual]\fP

  imbue         changes the associated locale
                \fI(virtual protected member function)\fP
  \fB[virtual]\fP


.SH Non-member functions



  std::swap(std::basic_filebuf) specializes the std::swap algorithm
                                \fI(function template)\fP
  \fI(C++11)\fP


  Inherited from std::basic_streambuf


.SH Member types


  Member type Definition
  char_type   CharT
  traits_type Traits; the program is ill-formed if Traits::char_type is not CharT.
  int_type    Traits::int_type
  pos_type    Traits::pos_type
  off_type    Traits::off_type


.SH Member functions



  destructor            destructs the basic_streambuf object
                        \fI(virtual public member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

.SH Locales

                        invokes imbue()
  pubimbue              \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                        obtains a copy of the associated locale
  getloc                \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP

.SH Positioning

                        invokes setbuf()
  pubsetbuf             \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                        invokes seekoff()
  pubseekoff            \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                        invokes seekpos()
  pubseekpos            \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                        invokes sync()
  pubsync               \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP

.SH Get area

                        obtains the number of characters immediately available in the get area
  in_avail              \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                        advances the input sequence, then reads one character without advancing again
  snextc                \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                        reads one character from the input sequence and advances the sequence
  sbumpc                \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP

  stossc                advances the input sequence as if by calling sbumpc() and discarding the result
                        \fI(public member function)\fP
  (deprecated in C++98)
  (removed in C++17)
                        reads one character from the input sequence without advancing the sequence
  sgetc                 \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                        invokes xsgetn()
  sgetn                 \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP

.SH Put area

                        writes one character to the put area and advances the next pointer
  sputc                 \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                        invokes xsputn()
  sputn                 \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP

.SH Putback

                        puts one character back in the input sequence
  sputbackc             \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                        moves the next pointer in the input sequence back by one
  sungetc               \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP


.SH Protected member functions


                constructs a basic_streambuf object
  constructor   \fI(protected member function)\fP

  operator=     replaces a basic_streambuf object
                \fI(protected member function)\fP
  \fI(C++11)\fP

  swap          swaps two basic_streambuf objects
                \fI(protected member function)\fP
  \fI(C++11)\fP

.SH Locales


  imbue         changes the associated locale
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

.SH Positioning


  setbuf        replaces the buffer with user-defined array, if permitted
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

  seekoff       repositions the next pointer in the input sequence, output sequence, or both, using relative addressing
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

  seekpos       repositions the next pointer in the input sequence, output sequence, or both using absolute addressing
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

  sync          synchronizes the buffers with the associated character sequence
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

.SH Get area


  showmanyc     obtains the number of characters available for input in the associated input sequence, if known
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

  underflow     reads characters from the associated input sequence to the get area
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

  uflow         reads characters from the associated input sequence to the get area and advances the next pointer
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

  xsgetn        reads multiple characters from the input sequence
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

  eback         returns a pointer to the beginning, current character and the end of the get area
  gptr          \fI(protected member function)\fP
  egptr
                advances the next pointer in the input sequence
  gbump         \fI(protected member function)\fP
                repositions the beginning, next, and end pointers of the input sequence
  setg          \fI(protected member function)\fP

.SH Put area


  xsputn        writes multiple characters to the output sequence
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

  overflow      writes characters to the associated output sequence from the put area
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

  pbase         returns a pointer to the beginning, current character and the end of the put area
  pptr          \fI(protected member function)\fP
  epptr
                advances the next pointer of the output sequence
  pbump         \fI(protected member function)\fP
                repositions the beginning, next, and end pointers of the output sequence
  setp          \fI(protected member function)\fP

.SH Putback


  pbackfail     puts a character back into the input sequence, possibly modifying the input sequence
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP




