.TH std::unordered_set<Key,Hash,KeyEqual,Allocator>::size 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::unordered_set<Key,Hash,KeyEqual,Allocator>::size \- std::unordered_set<Key,Hash,KeyEqual,Allocator>::size

.SH Synopsis

size_type size() const noexcept;  \fI(since C++11)\fP

Returns the number of elements in the container, i.e. std::distance(begin(), end()).

.SH Parameters

\fI(none)\fP

.SH Return value

The number of elements in the container.

.SH Complexity

Constant.

.SH Example

The following code uses size to display the number of elements in a std::unordered_set<int>:

// Run this code

  #include <unordered_set>
  #include <iostream>

  int main()
  {
      std::unordered_set<int> nums {1, 3, 5, 7};

      std::cout << "nums contains " << nums.size() << " elements.\\n";
  }

.SH Output:

  nums contains 4 elements.


.SH See also


         checks whether the container is empty
empty    \fI(public member function)\fP
         returns the maximum possible number of elements
max_size \fI(public member function)\fP




