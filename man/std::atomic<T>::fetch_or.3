.TH std::atomic<T>::fetch_or 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::atomic<T>::fetch_or \- std::atomic<T>::fetch_or

.SH Synopsis

  T fetch_or( T arg,
  std::memory_order order = std::memory_order_seq_cst ) noexcept;           \fI(since C++11)\fP
  T fetch_or( T arg,                                                        (member only of atomic<Integral> template specialization)
  std::memory_order order = std::memory_order_seq_cst ) volatile noexcept;

  Atomically replaces the current value with the result of bitwise OR of the value and arg. The operation is read-modify-write operation. Memory is affected according to the value of order.

.SH Parameters


  arg   - the other argument of bitwise OR
  order - memory order constraints to enforce


.SH Return value

  The value immediately preceding the effects of this function in the modification_order of *this.


.SH See also



  atomic_fetch_or
  atomic_fetch_or_explicit replaces the atomic object with the result of bitwise OR with a non-atomic argument and obtains the previous value of the atomic
                           \fI(function template)\fP
  \fI(C++11)\fP
  \fI(C++11)\fP




