.TH std::money_get 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::money_get \- std::money_get

.SH Synopsis

Defined in header <locale>
template<
class CharT,
class InputIt = std::istreambuf_iterator<CharT>
> class money_get;

Class template std::money_get encapsulates the rules for parsing monetary values from character streams. The standard I/O manipulator std::get_money uses the std::money_get facet of the I/O stream's locale.
 std-money get-inheritance.svg
Inheritance diagram

.SH Type requirements


-
InputIt must meet the requirements of LegacyInputIterator.


.SH Specializations

Two standalone (locale-independent) full specializations and two partial specializations are provided by the standard library:

Defined in header <locale>
std::money_get<char>             parses narrow string representations of monetary values
std::money_get<wchar_t>          parses wide string representations of monetary values
std::money_get<char, InputIt>    parses narrow string representations of monetary values using custom input iterator
std::money_get<wchar_t, InputIt> parses wide string representations of monetary values using custom input iterator

In addition, every locale object constructed in a C++ program implements its own (locale-specific) versions of these specializations.

.SH Member types


Member type Definition
char_type   CharT
string_type std::basic_string<CharT>
iter_type   InputIt


.SH Member functions


              constructs a new money_get facet
constructor   \fI(public member function)\fP
              destructs a money_get facet
destructor    \fI(protected member function)\fP
              invokes do_get
get           \fI(public member function)\fP


.SH Protected member functions



do_get    parses a monetary value from an input stream
          \fI(virtual protected member function)\fP
\fB[virtual]\fP


.SH Member objects


                          id of the locale
static std::locale::id id \fI(public member object)\fP


.SH Example


// Run this code

  #include <iostream>
  #include <sstream>
  #include <locale>
  #include <iomanip>
  #include <iterator>
  int main()
  {
      std::string str = "$1.11 $2.22 $3.33";
      std::cout << std::fixed << std::setprecision(2);

      std::cout << '"' << str << "\\" parsed with the I/O manipulator: ";
      std::istringstream s1(str);
      s1.imbue(std::locale("en_US.UTF-8"));
      long double val;
      while(s1 >> std::get_money(val))
          std::cout << val/100 << ' ';
      std::cout << '\\n';

      str = "USD  1,234.56";
      std::cout << '"' << str << "\\" parsed with the facet directly: ";
      std::istringstream s2(str);
      s2.imbue(std::locale("en_US.UTF-8"));
      auto& f = std::use_facet<std::money_get<char>>(s2.getloc());
      std::ios_base::iostate err;
      std::istreambuf_iterator<char> beg(s2), end;
      f.get(beg, end, true, s2, err, val);
      std::cout << val/100 << '\\n';
  }

.SH Output:

  "$1.11 $2.22 $3.33" parsed with the I/O manipulator: 1.11 2.22 3.33
  "USD  1,234.56" parsed with the facet directly: 1234.56


.SH See also


           defines monetary formatting parameters used by std::money_get and std::money_put
moneypunct \fI(class template)\fP
           formats a monetary value for output as a character sequence
money_put  \fI(class template)\fP

get_money  parses a monetary value
           \fI(function template)\fP
\fI(C++11)\fP




