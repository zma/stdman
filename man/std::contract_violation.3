.TH std::contract_violation 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::contract_violation \- std::contract_violation

.SH Synopsis

Defined in header <contract>
class contract_violation;     \fI(since C++20)\fP

The class contract_violation describes information about a contract_violation. It is generated by a C++ implementation and passed to a contract violation handler when a contract violation is detected.

.SH Member functions


                returns the line number where the contract violation happened
line_number     \fI(public member function)\fP
                returns the name of the file where the contract violation happened
file_name       \fI(public member function)\fP
                returns the name of the function where the contract violation happened
function_name   \fI(public member function)\fP
                returns a string describing the predicate of the violated contract
comment         \fI(public member function)\fP
                returns a string describing the assertion level of the violated contract
assertion_level \fI(public member function)\fP


std::contract_violation::line_number


std::uint_least32_t line_number() const noexcept;

Returns the location of the source code where the contract violation happened. If the name is unknown, an implementation may return 0 instead.

std::contract_violation::file_name


std::string_view file_name() const noexcept;

Returns the name of the the source file where the contract violation happened. If the name is unknown, an implementation may return an empty string_view instead.

std::contract_violation::function_name


std::string_view function_name() const noexcept;

Returns the name of the function where the contract violation happened. If the name is unknown, an implementation may return an empty string_view instead.

std::contract_violation::comment


std::string_view comment() const noexcept;

Returns an implementation-defined string describing the predicate of the violated contract.

std::contract_violation::assertion_level


std::string_view assertion_level() const noexcept;

Returns a string describing the assertion level of the violated contract.



