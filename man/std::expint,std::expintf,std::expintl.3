.TH std::expint,std::expintf,std::expintl 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::expint,std::expintf,std::expintl \- std::expint,std::expintf,std::expintl

.SH Synopsis

double expint( double arg );
float expint( float arg );
long double expint( long double arg );  \fB(1)\fP \fI(since C++17)\fP
float expintf( float arg );
long double expintl( long double arg );
double expint( IntegralType arg );      \fB(2)\fP \fI(since C++17)\fP

1) Computes the exponential_integral of arg.
2) A set of overloads or a function template accepting an argument of any integral_type. Equivalent to \fB(1)\fP after casting the argument to double.

.SH Parameters


arg - value of a floating-point or Integral_type


.SH Return value

If no errors occur, value of the exponential integral of arg, that is -∫∞
-arg

e-t
t

dt, is returned.

.SH Error handling

Errors may be reported as specified in math_errhandling

* If the argument is NaN, NaN is returned and domain error is not reported
* If the argument is ±0, -∞ is returned


.SH Notes

Implementations that do not support C++17, but support ISO_29124:2010, provide this function if __STDCPP_MATH_SPEC_FUNCS__ is defined by the implementation to a value at least 201003L and if the user defines __STDCPP_WANT_MATH_SPEC_FUNCS__ before including any standard library headers.
Implementations that do not support ISO 29124:2010 but support TR 19768:2007 (TR1), provide this function in the header tr1/cmath and namespace std::tr1
An implementation of this function is also available_in_boost.math

.SH Example


// Run this code

  #include <cmath>
  #include <iostream>
  int main()
  {
      std::cout << "Ei(0) = " << std::expint(0) << '\\n'
                << "Ei(1) = " << std::expint(1) << '\\n'
                << "Gompetz constant = " << -std::exp(1)*std::expint(-1) << '\\n';
  }

.SH Output:

  Ei\fB(0)\fP = -inf
  Ei\fB(1)\fP = 1.89512
  Gompetz constant = 0.596347


.SH External links

Weisstein,_Eric_W._"Exponential_Integral." From MathWorld--A Wolfram Web Resource.



