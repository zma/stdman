.TH std::ctype_byname<char> 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ctype_byname<char> \- std::ctype_byname<char>

.SH Synopsis

Defined in header <locale>
template<>
class ctype_byname : public std::ctype<char>;

This specialization of std::ctype_byname encapsulates character classification features for type char. Like its base class std::ctype<char> and unlike general-purpose std::ctype_byname, table lookup is used to classify characters

.SH Member types


Member type Definition
mask        ctype<char>::mask


.SH Member functions


              constructs a new ctype_byname<char> facet
constructor   \fI(public member function)\fP
              destructs a ctype_byname<char> facet
destructor    \fI(protected member function)\fP


Inherited from std::ctype<char>


.SH Member types


Member type Definition
char_type   char


.SH Member objects


Member name               Type
id (static)               std::locale::id
table_size (static const) std::size_t size of the classification table, at least 256


.SH Member functions


              obtains the character classification table
table         \fI(public member function of std::ctype<char>)\fP

classic_table obtains the "C" locale character classification table
              \fI(public static member function of std::ctype<char>)\fP
\fB[static]\fP
              classifies a character or a character sequence, using the classification table
is            \fI(public member function of std::ctype<char>)\fP
              locates the first character in a sequence that conforms to given classification, using the classification table
scan_is       \fI(public member function of std::ctype<char>)\fP
              locates the first character in a sequence that fails given classification, using the classification table
scan_not      \fI(public member function of std::ctype<char>)\fP
              invokes do_toupper
toupper       \fI(public member function of std::ctype<CharT>)\fP
              invokes do_tolower
tolower       \fI(public member function of std::ctype<CharT>)\fP
              invokes do_widen
widen         \fI(public member function of std::ctype<CharT>)\fP
              invokes do_narrow
narrow        \fI(public member function of std::ctype<CharT>)\fP


.SH Protected member functions



do_toupper converts a character or characters to uppercase
           \fI(virtual protected member function of std::ctype<CharT>)\fP
\fB[virtual]\fP

do_tolower converts a character or characters to lowercase
           \fI(virtual protected member function of std::ctype<CharT>)\fP
\fB[virtual]\fP

do_widen   converts a character or characters from char to charT
           \fI(virtual protected member function of std::ctype<CharT>)\fP
\fB[virtual]\fP

do_narrow  converts a character or characters from charT to char
           \fI(virtual protected member function of std::ctype<CharT>)\fP
\fB[virtual]\fP


Inherited from std::ctype_base


.SH Member types


Type Definition
mask unspecified bitmask type (enumeration, integer type, or bitset)


.SH Member constants



space            the value of mask identifying whitespace character classification
                 \fI(public static member constant)\fP
\fB[static]\fP

print            the value of mask identifying printable character classification
                 \fI(public static member constant)\fP
\fB[static]\fP

cntrl            the value of mask identifying control character classification
                 \fI(public static member constant)\fP
\fB[static]\fP

upper            the value of mask identifying uppercase character classification
                 \fI(public static member constant)\fP
\fB[static]\fP

lower            the value of mask identifying lowercase character classification
                 \fI(public static member constant)\fP
\fB[static]\fP

alpha            the value of mask identifying alphabetic character classification
                 \fI(public static member constant)\fP
\fB[static]\fP

digit            the value of mask identifying digit character classification
                 \fI(public static member constant)\fP
\fB[static]\fP

punct            the value of mask identifying punctuation character classification
                 \fI(public static member constant)\fP
\fB[static]\fP

xdigit           the value of mask identifying hexadecimal digit character classification
                 \fI(public static member constant)\fP
\fB[static]\fP

blank            the value of mask identifying blank character classification
                 \fI(public static member constant)\fP
\fB[static]\fP \fI(C++11)\fP

alnum            alpha | digit
                 \fI(public static member constant)\fP
\fB[static]\fP

graph            alnum | punct
                 \fI(public static member constant)\fP
\fB[static]\fP


.SH Example


// Run this code

  #include <iostream>
  #include <locale>

  int main()
  {
      char c = '\\xde'; // capital letter thorn

      std::locale loc("C");

      std::cout << "isupper('Þ', C locale) returned "
                 << std::boolalpha << std::isupper(c, loc) << '\\n';

      loc = std::locale(loc, new std::ctype_byname<char>("en_US.utf8"));

      std::cout << "isupper('Þ', C locale with Unicode ctype<char>) returned "
                << std::boolalpha << std::isupper(c, loc) << '\\n';

      loc = std::locale(loc, new std::ctype_byname<char>("is_IS.iso88591"));

      std::cout << "isupper('Þ', C locale with Islandic ctype<char>) returned "
                << std::boolalpha << std::isupper(c, loc) << '\\n';
  }

.SH Output:

  isupper('Þ', C locale) returned false
  isupper('Þ', C locale with Unicode ctype<char>) returned false
  isupper('Þ', C locale with Islandic ctype<char>) returned true


.SH See also


            defines character classification tables
ctype       \fI(class template)\fP
            specialization of std::ctype for type char
ctype<char> \fI(class template specialization)\fP




