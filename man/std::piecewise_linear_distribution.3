.TH std::piecewise_linear_distribution 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::piecewise_linear_distribution \- std::piecewise_linear_distribution

.SH Synopsis

Defined in header <random>
template< class RealType = double >   \fI(since C++11)\fP
class piecewise_linear_distribution;

std::piecewise_linear_distribution produces random floating-point numbers, which are distributed according to a linear probability density function within each of the several subintervals [b
i, b
i+1). The distribution is such that the probability density at each interval boundary is exactly the predefined value p
i.
The probability density for any b
i≤x<b
i+1 is p
i

b
i+1-x
b
i+1-b
i

+ p
i+1

x-b
i
b
i+1-b
i

, where probability densities at interval boundaries p
k are calculated as w
k/S where S is the sum of all

1
2

(w
k+w
k+1)(b
k+1−b
k).
The set of interval boundaries b
i and the set of weights at boundaries w
i are the parameters of this distribution.
std::piecewise_linear_distribution satisfies all requirements of RandomNumberDistribution

.SH Template parameters


RealType - The result type generated by the generator. The effect is undefined if this is not one of float, double, or long double.



.SH Member types


Member type Definition
result_type RealType
param_type  the type of the parameter set, see RandomNumberDistribution.


.SH Member functions


              constructs new distribution
constructor   \fI(public member function)\fP
              resets the internal state of the distribution
reset         \fI(public member function)\fP

.SH Generation

              generates the next random number in the distribution
operator()    \fI(public member function)\fP

.SH Characteristics

              returns the distribution parameters
intervals     \fI(public member function)\fP
densities
              gets or sets the distribution parameter object
param         \fI(public member function)\fP
              returns the minimum potentially generated value
min           \fI(public member function)\fP
              returns the maximum potentially generated value
max           \fI(public member function)\fP


.SH Non-member functions


           compares two distribution objects
operator== \fI(function)\fP
operator!=
           performs stream input and output on pseudo-random number distribution
operator<< \fI(function template)\fP
operator>>


.SH Example


// Run this code

  #include <iostream>
  #include <iomanip>
  #include <string>
  #include <map>
  #include <random>

  int main()
  {
      std::random_device rd;
      std::mt19937 gen(rd());
      // increase the probability from 0 to 5
      // remain flat from 5 to 10
      // decrease from 10 to 15 at the same rate
      std::vector<double> i{0, 5, 10, 15};
      std::vector<double> w{0, 1,   1, 0};
      std::piecewise_linear_distribution<> d(i.begin(), i.end(), w.begin());

      std::map<int, int> hist;
      for(int n=0; n<10000; ++n) {
          ++hist[d(gen)];
      }
      for(auto p : hist) {
          std::cout << std::setw(2) << std::setfill('0') << p.first << ' '
              << std::string(p.second/100,'*') << '\\n';
      }
  }

.SH Possible output:

  00 *
  01 ***
  02 ****
  03 ******
  04 *********
  05 *********
  06 *********
  07 **********
  08 *********
  09 **********
  10 *********
  11 *******
  12 ****
  13 ***
  14 *




