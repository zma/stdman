.TH std::chrono::nonexistent_local_time 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::nonexistent_local_time \- std::chrono::nonexistent_local_time

.SH Synopsis
   Defined in header <chrono>
   class nonexistent_local_time;  \fI(since C++20)\fP

   Defines a type of object to be thrown as exception to report that an attempt was made to convert a nonexistent std::chrono::local_time to a std::chrono::sys_time without specifying a std::chrono::choose (such as choose::earliest or choose::latest).

   This exception is thrown by std::chrono::time_zone::to_sys and functions that call it (such as the constructors of std::chrono::zoned_time that takes a std::chrono::local_time).

   std-chrono-nonexistent local time-inheritance.svg

nheritance diagram

.SH Member functions

   constructor   constructs the exception object
                 \fI(public member function)\fP

std::chrono::nonexistent_local_time::nonexistent_local_time

   template< class Duration >

   nonexistent_local_time(const std::chrono::local_time<Duration>& tp,

   const std::chrono::local_info& i);

   Constructs the exception object. The explanatory string returned by what() is equivalent to that produced by os.str() after the following code:

 std::ostringstream os;
 os << tp << " is in a gap between\\n"
    << std::chrono::local_seconds(i.first.end.time_since_epoch()) + i.first.offset
    << ' ' << i.first.abbrev << " and\\n"
    << std::chrono::local_seconds(i.second.begin.time_since_epoch()) + i.second.offset
    << ' ' << i.second.abbrev
    << " which are both equivalent to\\n"
    << i.first.end << " UTC";

   Because copying a standard library class derived from std::exception is not permitted to throw exceptions, this message is typically stored internally as a separately-allocated reference-counted string.

   The behavior is undefined if i.result != std::chrono::local_info::nonexistent.

.SH Parameters

   tp - the time point for which conversion was attempted
   i  - a std::chrono::local_info describing the result of the conversion attempt

.SH Exceptions

   May throw std::bad_alloc

Inherited from std::exception

.SH Member functions

   destructor   destroys the exception object
   \fB[virtual]\fP    \fI(virtual public member function of std::exception)\fP
   what         returns an explanatory string
   \fB[virtual]\fP    \fI(virtual public member function of std::exception)\fP
