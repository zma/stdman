.TH std::basic_string<CharT,Traits,Allocator>::rbegin,std::basic_string<CharT,Traits,Allocator>::crbegin 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_string<CharT,Traits,Allocator>::rbegin,std::basic_string<CharT,Traits,Allocator>::crbegin \- std::basic_string<CharT,Traits,Allocator>::rbegin,std::basic_string<CharT,Traits,Allocator>::crbegin

.SH Synopsis

  reverse_iterator rbegin();                               \fI(until C++11)\fP
  reverse_iterator rbegin() noexcept;                      \fI(since C++11)\fP
  const_reverse_iterator rbegin() const;           \fB(1)\fP                   \fI(until C++11)\fP
  const_reverse_iterator rbegin() const noexcept;      \fB(2)\fP               \fI(since C++11)\fP
  const_reverse_iterator crbegin() const noexcept;         \fB(3)\fP           \fI(since C++11)\fP

  Returns a reverse iterator to the first character of the reversed string. It corresponds to the last character of the non-reversed string.
   range-rbegin-rend.svg

.SH Parameters

  \fI(none)\fP

.SH Return value

  reverse iterator to the first character

.SH Complexity

  Constant

.SH Example

  
// Run this code

    #include <iostream>
    #include <algorithm>
    #include <iterator>
    #include <string>

    int main()
    {
        std::string s("Exemplar!");
        *s.rbegin() = 'y';
        std::cout << s << '\\n'; // "Exemplary"

        std::string c;
        std::copy(s.crbegin(), s.crend(), std::back_inserter(c));
        std::cout << c << '\\n'; // "yralpmexE"
    }

.SH Output:

    Exemplary
    yralpmexE


.SH See also



  rend
  crend   returns a reverse iterator to the end
          \fI(public member function)\fP

  \fI(C++11)\fP




