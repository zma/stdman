.TH std::Regular 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::Regular \- std::Regular

.SH Synopsis
   Defined in header <concepts>
   template <class T>                                                    \fI(since C++20)\fP
   concept Regular = std::Semiregular<T> && std::EqualityComparable<T>;

   The Regular concept specifies that a type is regular, that is, it is copyable, default constructible, and equality comparable. It is satisfied by types that behave similarly to built-in types like int, and that are comparable with ==.
