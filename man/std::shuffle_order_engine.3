.TH std::shuffle_order_engine 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::shuffle_order_engine \- std::shuffle_order_engine

.SH Synopsis

  Defined in header <random>
  template<
  class Engine,                  \fI(since C++11)\fP
  std::size_t K
  > class shuffle_order_engine;

  shuffle_order_engine is a random number engine adaptor that shuffles the random numbers generated by the base engine. It maintains a table of size K and delivers a randomly selected number from that table when requested, replacing it with a number generated by the base engine.
  The following typedef defines the random number engine with one commonly used parameter set:

  Defined in header <random>
  Type           Definition
  knuth_b\fI(C++11)\fP std::shuffle_order_engine<std::minstd_rand0, 256>


.SH Template parameters


  Engine - the type of the wrapped engine
  K      - the size of the internal table. Must be greater than 0
.SH Type requirements
  -
  Engine must meet the requirements of RandomNumberEngine.


.SH Member types


  Member type Definition
  result_type Engine::result_type


.SH Member functions


                constructs the engine adaptor
  constructor   \fI(public member function)\fP
                sets the state of the underlying engine
  seed          \fI(public member function)\fP
                returns the underlying engine
  base          \fI(public member function)\fP

.SH Generation

                advances the state of the underlying engine and returns the generated value
  operator()    \fI(public member function)\fP
                advances the adaptor's state by a specified amount
  discard       \fI(public member function)\fP

.SH Characteristics


  min           gets the smallest possible value in the output range of the underlying engine.
                \fI(public static member function)\fP
  \fB[static]\fP

  max           gets the largest possible value in the output range of the underlying engine.
                \fI(public static member function)\fP
  \fB[static]\fP


.SH Non-member functions


             compares the internal states of the adaptors and underlying engines
  operator== \fI(function)\fP
  operator!=
             performs stream input and output on pseudo-random number engine adaptor
  operator<< \fI(function)\fP
  operator>>


.SH Member objects



  constexpr size_t table_size the size of the internal table, K
                              \fI(public static member constant)\fP
  \fB[static]\fP




