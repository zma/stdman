.TH std::experimental::filesystem::path::filename 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::filesystem::path::filename \- std::experimental::filesystem::path::filename

.SH Synopsis

  path filename() const;  (filesystem TS)

  Returns the filename component of the path.
  Equivalent to empty() ? path() : *--end().

.SH Parameters

  \fI(none)\fP

.SH Return value

  The filename identified by the path.

.SH Exceptions

  \fI(none)\fP

.SH Example

  
// Run this code

    #include <iostream>
    #include <experimental/filesystem>
    namespace fs = std::experimental::filesystem;

    int main()
    {
        std::cout << fs::path("/foo/bar.txt").filename() << '\\n'
                  << fs::path("/foo/.bar").filename() << '\\n'
                  << fs::path("/foo/bar/").filename() << '\\n'
                  << fs::path("/foo/.").filename() << '\\n'
                  << fs::path("/foo/..").filename() << '\\n'
                  << fs::path(".").filename() << '\\n'
                  << fs::path("..").filename() << '\\n'
                  << fs::path("/").filename() << '\\n';
    }

.SH Output:

    "bar.txt"
    ".bar"
    "."
    "."
    ".."
    "."
    ".."
    "/"


.SH See also


                   returns the file extension path component
  extension        \fI(public member function)\fP
                   returns the stem path component
  stem             \fI(public member function)\fP
                   replaces the last path component with another path
  replace_filename \fI(public member function)\fP
                   checks if the corresponding path element is not empty
  has_filename     \fI(public member function)\fP




