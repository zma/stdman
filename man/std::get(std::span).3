.TH std::get(std::span) 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::get(std::span) \- std::get(std::span)

.SH Synopsis
   template< std::size_t I, class T, std::size_t N >  \fI(since C++20)\fP
   constexpr T& get( std::span<T,N> s ) noexcept;

   Obtains a reference to the Ith element of the span s.

   The span must have static extent (i.e., N != std::dynamic_extent) and I must be an integer value in range [0, N). This is enforced at compile time as opposed to operator[].

.SH Parameters

   s - span whose contents to extract

.SH Return value

   A reference to the Ith element of s.

.SH Complexity

   Constant.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   operator[]             accesses an element of the sequence
                          \fI(public member function)\fP
   std::get(std::tuple)   tuple accesses specified element
                          \fI(function template)\fP
   std::get(std::pair)    accesses an element of a pair
   \fI(C++11)\fP                \fI(function template)\fP
   std::get(std::variant) reads the value of the variant given the index or the type (if the type is unique), throws on error
   \fI(C++17)\fP                \fI(function template)\fP
