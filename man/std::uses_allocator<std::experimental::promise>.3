.TH std::uses_allocator<std::experimental::promise> 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::uses_allocator<std::experimental::promise> \- std::uses_allocator<std::experimental::promise>

.SH Synopsis

Defined in header <experimental/future>
template< class R, class Alloc >
struct uses_allocator<std::experimental::promise<R>, Alloc>   (library fundamentals TS)
: std::true_type { };

This specialization of std::uses_allocator informs other library components that all objects of type std::experimental::promise support uses-allocator construction.

Inherited from std::integral_constant


.SH Member constants



value    true
         \fI(public static member constant)\fP
\fB[static]\fP


.SH Member functions


              converts the object to bool, returns value
operator bool \fI(public member function)\fP

operator()    returns value
              \fI(public member function)\fP
\fI(C++14)\fP


.SH Member types


Type       Definition
value_type bool
type       std::integral_constant<bool, value>


.SH See also



uses_allocator checks if the specified type supports uses-allocator construction
               \fI(class template)\fP
\fI(C++11)\fP




