.TH std::experimental::simd_mask 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::simd_mask \- std::experimental::simd_mask

.SH Synopsis

  Defined in header <experimental/simd>
  template< class T, class Abi = simd_abi::compatible<T> >
  class simd_mask;

  The class template simd_mask is a data-parallel type with the element type bool. The width of a given simd_mask instantiation is a constant expression, determined by the template parameters. Specifically, simd_mask<T, Abi>::size() is always simd<T, Abi>::size().

.SH Template parameters


  T   - the element type simd_mask applies on
  Abi - the ABI type simd_mask applies on


  Helper alias templates


  Template                                             Definition
  template <class T, int N> using fixed_size_simd_mask simd_mask<T, simd_abi::fixed_size<N>>
  template <class T> using native_simd_mask            simd_mask<T, simd_abi::native>


.SH Member types


  Member type Definition
  value_type  bool
  reference   implementation-defined
  simd_type   simd<T, Abi>
  abi_type    Abi


.SH Member functions


                constructs a simd_mask object
  constructor   \fI(public member function)\fP
                loads from address
  copy_from     \fI(public member function)\fP
                stores to address
  copy_to       \fI(public member function)\fP
                accesses specified element
  operator[]    \fI(public member function)\fP
                negates each element
  operator!     \fI(public member function)\fP

  size          returns the number of elements
                \fI(public static member function)\fP
  \fB[static]\fP


.SH Non-member functions


              element-wise logic operators
  operator&&_ \fI(function)\fP
  operator||

  operator&_  element-wise bitwise operators
  operator|_  \fI(function)\fP
  operator^

  operator&=_ element-wise compound operators
  operator|=_ \fI(function)\fP
  operator^=
              element-wise relation operators
  operator==_ \fI(function)\fP
  operator!=


.SH Example




