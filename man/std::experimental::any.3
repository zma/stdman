.TH std::experimental::any 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::any \- std::experimental::any

.SH Synopsis

  Defined in header <experimental/any>
  class any;                            (library fundamentals TS)

  The class any describes a type-safe container for single values of any type.
  1) An object of class any stores an instance of any type that satisfies the constructor requirements or is empty, and this is referred to as the state of the class any object. The stored instance is called the contained object. Two states are equivalent if they are either both empty or if both are not empty and if the contained objects are equivalent.
  2) The non-member any_cast functions provide type-safe access to the contained object.
  Implementations are encouraged to avoid dynamic allocations for small objects, but such an optimization may only be applied to types that for which std::is_nothrow_move_constructible returns true.

.SH Member functions


                constructs an any object
  constructor   \fI(public member function)\fP
                assigns an any object
  operator=     \fI(public member function)\fP
                destroys an any object
  destructor    \fI(public member function)\fP

.SH Modifiers

                destroys contained object
  clear         \fI(public member function)\fP
                swaps two any objects
  swap          \fI(public member function)\fP

.SH Observers

                checks if object holds a value
  empty         \fI(public member function)\fP
                returns the typeid of the contained value
  type          \fI(public member function)\fP


.SH Non-member functions


           swaps two any instances
  swap     \fI(function)\fP
           type-safe access to the contained object
  any_cast \fI(function template)\fP



.SH Helper classes



  bad_any_cast              exception thrown by the value-returning forms of any_cast on a type mismatch
                            \fI(class)\fP
  (library fundamentals TS)




