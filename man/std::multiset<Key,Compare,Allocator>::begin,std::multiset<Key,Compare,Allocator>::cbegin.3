.TH std::multiset<Key,Compare,Allocator>::begin,std::multiset<Key,Compare,Allocator>::cbegin 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::multiset<Key,Compare,Allocator>::begin,std::multiset<Key,Compare,Allocator>::cbegin \- std::multiset<Key,Compare,Allocator>::begin,std::multiset<Key,Compare,Allocator>::cbegin

.SH Synopsis

  iterator begin();                        \fI(until C++11)\fP
  iterator begin() noexcept;               \fI(since C++11)\fP
  const_iterator begin() const;            \fI(until C++11)\fP
  const_iterator begin() const noexcept;   \fI(since C++11)\fP
  const_iterator cbegin() const noexcept;  \fI(since C++11)\fP

  Returns an iterator to the first element of the container.
  If the container is empty, the returned iterator will be equal to end().
   range-begin-end.svg

.SH Parameters

  \fI(none)\fP

.SH Return value

  Iterator to the first element

.SH Complexity

  Constant

.SH Notes

  Because both iterator and const_iterator are constant iterators (and may in fact be the same type), it is not possible to mutate the elements of the container through an iterator returned by any of these member functions.

.SH Example


   This section is incomplete
   Reason: no example


.SH See also



  end_ returns an iterator to the end
  cend \fI(public member function)\fP






