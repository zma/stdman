.TH std::swap(std::unordered_map) 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::swap(std::unordered_map) \- std::swap(std::unordered_map)

.SH Synopsis

  template< class Key, class T, class Hash, class KeyEqual, class Alloc >     \fI(since C++11)\fP
  void swap( unordered_map<Key,T,Hash,KeyEqual,Alloc>& lhs,                   \fI(until C++17)\fP
  unordered_map<Key,T,Hash,KeyEqual,Alloc>& rhs );
  template< class Key, class T, class Hash, class KeyEqual, class Alloc >
  void swap( unordered_map<Key,T,Hash,KeyEqual,Alloc>& lhs,                   \fI(since C++17)\fP
  unordered_map<Key,T,Hash,KeyEqual,Alloc>& rhs ) noexcept(/* see below */);

  Specializes the std::swap algorithm for std::unordered_map. Swaps the contents of lhs and rhs. Calls lhs.swap(rhs).


.SH Parameters


  lhs, rhs - containers whose contents to swap


.SH Return value

  \fI(none)\fP

.SH Complexity

  Constant.

.SH Exceptions


  noexcept specification:           \fI(since C++17)\fP
  noexcept(noexcept(lhs.swap(rhs)))


.SH See also


       swaps the contents
  swap \fI(public member function)\fP




