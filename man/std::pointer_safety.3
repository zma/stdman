.TH std::pointer_safety 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::pointer_safety \- std::pointer_safety

.SH Synopsis

  Defined in header <memory>
  enum class pointer_safety {
  relaxed,
  preferred,                   \fI(since C++11)\fP
  strict
  };

  The scoped enumeration type pointer_safety lists the pointer safety modes supported by C++

  Enumeration constants


  pointer_safety::strict    Only safely-derived pointers (pointers to objects allocated with new or subobjects thereof) may be dereferenced or deallocated. Garbage collector may be active.
  pointer_safety::preferred All pointers are considered valid and may be dereferenced or deallocated. A reachability-based leak detector may be active
  pointer_safety::relaxed   All pointers are considered valid and may be dereferenced or deallocated


.SH See also



  get_pointer_safety returns the current pointer safety model
                     \fI(function)\fP
  \fI(C++11)\fP




