.TH std::complex<T>::operator+(unary),operator-(unary) 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::complex<T>::operator+(unary),operator-(unary) \- std::complex<T>::operator+(unary),operator-(unary)

.SH Synopsis
   template< class T >                                                        \fI(until C++20)\fP
   std::complex<T> operator+( const std::complex<T>& val );
   template< class T >                                                        \fI(since C++20)\fP
   constexpr std::complex<T> operator+( const std::complex<T>& val ); \fB(1)\fP
   template< class T >                                                                      \fI(until C++20)\fP
   std::complex<T> operator-( const std::complex<T>& val );               \fB(2)\fP
   template< class T >                                                                      \fI(since C++20)\fP
   constexpr std::complex<T> operator-( const std::complex<T>& val );

   Implements the analogs of the unary arithmetic operators for complex numbers.

   1) Returns the value of its argument
   2) Negates the argument

.SH Parameters

   val - the complex number argument

.SH Return value

   1) a copy of the argument, std::complex<T>(val)
   2) negated argument, std::complex<T>(-val.real(), -val.imag())

.SH See also

   operator+
   operator- performs complex number arithmetics on two complex values or a complex and a scalar
   operator* \fI(function template)\fP
   operator/
