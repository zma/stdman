.TH std::basic_string<CharT,Traits,Allocator>::copy 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_string<CharT,Traits,Allocator>::copy \- std::basic_string<CharT,Traits,Allocator>::copy

.SH Synopsis

  size_type copy( CharT* dest,
  size_type count,
  size_type pos = 0) const;

  Copies a substring [pos, pos+count) to character string pointed to by dest. If the requested substring lasts past the end of the string, or if count == npos, the copied substring is [pos, size()). The resulting character string is not null-terminated.
  If pos > size(), std::out_of_range is thrown.

.SH Parameters


  dest  - pointer to the destination character string
  pos   - position of the first character to include
  count - length of the substring


.SH Return value

  number of characters copied

.SH Exceptions

  std::out_of_range if pos > size().

.SH Complexity

  linear in count

.SH Example

  
// Run this code

    #include <string>
    #include <iostream>

    int main()
    {
      std::string foo("quuuux");
      char bar[7]{};
      foo.copy(bar, sizeof bar);
      std::cout << bar << '\\n';
    }

.SH Output:

    quuuux


.SH See also


         returns a substring
  substr \fI(public member function)\fP




