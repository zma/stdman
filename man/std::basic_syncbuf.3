.TH std::basic_syncbuf 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_syncbuf \- std::basic_syncbuf

.SH Synopsis

  Defined in header <syncstream>
  template<
  class CharT,
  class Traits = std::char_traits<CharT>,                             \fI(since C++20)\fP
  class Allocator = std::allocator<CharT>
  > class basic_syncbuf : public std::basic_streambuf<CharT, Traits>

  std::basic_syncbuf is a wrapper for a std::basic_streambuf (provided at construction time as a pointer). It accumulates output in its own internal buffer, and atomically transmits its entire contents to the wrapped buffer on destruction and when explicitly requested, so that they appear as a contiguous sequence of characters. It guarantees that there are no data races and no interleaving of characters sent to the wrapped buffer as long as all other outputs made to the same buffer are made through, possibly different, instances of std::basic_syncbuf.
  Typical implementation of std::basic_syncbuf holds a pointer to the wrapped std::basic_streambuf, a boolean flag indicating whether the buffer will transmit its contents to the wrapped buffer on sync (flush), a boolean flag indicating a pending flush when the policy is to not emit on sync, an internal buffer that uses Allocator (such as std::string), and a pointer to a mutex used to synchronize emit between multiple threads accessing the same wrapped stream buffer (these mutexes may be in a hash map with pointers to basic_streambuf objects used as keys).
  Like other streambuf classes, std::basic_syncbuf is normally only accessed through the corresponding stream, std::osyncstream, not directly.
  Two specializations for common character types are also defined:

  Defined in header <syncstream>
  Type     Definition
  syncbuf  basic_syncbuf<char>
  wsyncbuf basic_syncbuf<wchar_t>


.SH Member types


  Member type    Definition
  char_type      CharT
  traits_type    Traits; the program is ill-formed if Traits::char_type is not CharT.
  int_type       Traits::int_type
  pos_type       Traits::pos_type
  off_type       Traits::off_type
  allocator_type Allocator
  streambuf_type std::basic_streambuf<CharT, Traits>


.SH Member functions



.SH Public member functions

                   constructs a basic_syncbuf object
  constructor      \fI(public member function)\fP
                   assigns a basic_syncbuf object
  operator=        \fI(public member function)\fP
                   swaps two basic_syncbuf objects
  swap             \fI(public member function)\fP
                   destroys the basic_syncbuf and emits its internal buffer
  destructor       \fI(public member function)\fP
                   atomically transmits the entire internal buffer to the wrapped streambuf
  emit             \fI(public member function)\fP
                   retrieves the wrapped streambuf pointer
  get_wrapped      \fI(public member function)\fP
                   retrieves the allocator used by this basic_syncbuf
  get_allocator    \fI(public member function)\fP
                   changes the current emit-on-sync policy
  set_emit_on_sync \fI(public member function)\fP

.SH Protected member functions

                   either emits, or records a pending flush, depending on the current emit-on-sync policy
  sync             \fI(public member function)\fP


.SH Non-member functions



  std::swap(std::basic_syncbuf) specializes the std::swap algorithm
                                \fI(function template)\fP
  (C++20)


  Inherited from std::basic_streambuf


.SH Member types


  Member type Definition
  char_type   CharT
  traits_type Traits; the program is ill-formed if Traits::char_type is not CharT.
  int_type    Traits::int_type
  pos_type    Traits::pos_type
  off_type    Traits::off_type


.SH Member functions



  destructor            destructs the basic_streambuf object
                        \fI(virtual public member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

.SH Locales

                        invokes imbue()
  pubimbue              \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                        obtains a copy of the associated locale
  getloc                \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP

.SH Positioning

                        invokes setbuf()
  pubsetbuf             \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                        invokes seekoff()
  pubseekoff            \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                        invokes seekpos()
  pubseekpos            \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                        invokes sync()
  pubsync               \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP

.SH Get area

                        obtains the number of characters immediately available in the get area
  in_avail              \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                        advances the input sequence, then reads one character without advancing again
  snextc                \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                        reads one character from the input sequence and advances the sequence
  sbumpc                \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP

  stossc                advances the input sequence as if by calling sbumpc() and discarding the result
                        \fI(public member function)\fP
  (deprecated in C++98)
  (removed in C++17)
                        reads one character from the input sequence without advancing the sequence
  sgetc                 \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                        invokes xsgetn()
  sgetn                 \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP

.SH Put area

                        writes one character to the put area and advances the next pointer
  sputc                 \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                        invokes xsputn()
  sputn                 \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP

.SH Putback

                        puts one character back in the input sequence
  sputbackc             \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                        moves the next pointer in the input sequence back by one
  sungetc               \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP


.SH Protected member functions


                constructs a basic_streambuf object
  constructor   \fI(protected member function)\fP

  operator=     replaces a basic_streambuf object
                \fI(protected member function)\fP
  \fI(C++11)\fP

  swap          swaps two basic_streambuf objects
                \fI(protected member function)\fP
  \fI(C++11)\fP

.SH Locales


  imbue         changes the associated locale
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

.SH Positioning


  setbuf        replaces the buffer with user-defined array, if permitted
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

  seekoff       repositions the next pointer in the input sequence, output sequence, or both, using relative addressing
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

  seekpos       repositions the next pointer in the input sequence, output sequence, or both using absolute addressing
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

  sync          synchronizes the buffers with the associated character sequence
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

.SH Get area


  showmanyc     obtains the number of characters available for input in the associated input sequence, if known
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

  underflow     reads characters from the associated input sequence to the get area
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

  uflow         reads characters from the associated input sequence to the get area and advances the next pointer
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

  xsgetn        reads multiple characters from the input sequence
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

  eback         returns a pointer to the beginning, current character and the end of the get area
  gptr          \fI(protected member function)\fP
  egptr
                advances the next pointer in the input sequence
  gbump         \fI(protected member function)\fP
                repositions the beginning, next, and end pointers of the input sequence
  setg          \fI(protected member function)\fP

.SH Put area


  xsputn        writes multiple characters to the output sequence
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

  overflow      writes characters to the associated output sequence from the put area
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP

  pbase         returns a pointer to the beginning, current character and the end of the put area
  pptr          \fI(protected member function)\fP
  epptr
                advances the next pointer of the output sequence
  pbump         \fI(protected member function)\fP
                repositions the beginning, next, and end pointers of the output sequence
  setp          \fI(protected member function)\fP

.SH Putback


  pbackfail     puts a character back into the input sequence, possibly modifying the input sequence
                \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
  \fB[virtual]\fP




