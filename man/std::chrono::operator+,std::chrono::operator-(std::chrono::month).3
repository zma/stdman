.TH std::chrono::operator+,std::chrono::operator-(std::chrono::month) 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::operator+,std::chrono::operator-(std::chrono::month) \- std::chrono::operator+,std::chrono::operator-(std::chrono::month)

.SH Synopsis

  constexpr std::chrono::month operator+(const std::chrono::month& m,    \fB(1)\fP \fI(since C++20)\fP
  const std::chrono::months& ms) noexcept;
  constexpr std::chrono::month operator+(const std::chrono::months& ms,  \fB(2)\fP \fI(since C++20)\fP
  const std::chrono::month& m) noexcept;
  constexpr std::chrono::month operator-(const std::chrono::month& m,    \fB(3)\fP \fI(since C++20)\fP
  const std::chrono::months& ms) noexcept;
  constexpr std::chrono::months operator-(const std::chrono::month& m1,  \fB(4)\fP \fI(since C++20)\fP
  const std::chrono::month& m2) noexcept;

  1-2) Adds ms.count() months to m. The month value held in the result is computed by first evaluating static_cast<long long>(unsigned(m)) + (ms.count() - 1), reducing it modulo 12 to an integer in the range [0, 11], and then adding 1.
  3) Subtracts ms.count() months from m and returns the result. Equivalent to return m + -ms;
  4) If m1.ok() and m2.ok() are both true, returns a std::chrono::months value m such that m.count() is in the range [0, 11] and m2 + m == m1. Otherwise the returned value is unspecified.

.SH Return value

  1-3) A std::chrono::month holding a month value calculated as described above.
  4) A std::chrono::months representing the distance between m1 and m2.

.SH Notes

  As long as the computation doesn't overflow, (1-3) always return a valid month even if m.ok() is false.
  The result of subtracting two month values is a duration of type std::chrono::months. That duration unit represents the length of the average Gregorian month, and the resulting duration bears no relationship to the number of days in the particular months represented by the operands. For example, std::chrono::seconds(std::chrono::April - std::chrono::March) is not the number of seconds in March (2678400s), but 2629746s (30.436875 days).

.SH Example


   This section is incomplete
   Reason: no example


.SH See also



  operator++      increments or decrements the month
  operator++(int) \fI(public member function)\fP
  operator--
  operator--(int)
                  adds or subtracts a number of months
  operator+=      \fI(public member function)\fP
  operator-=




