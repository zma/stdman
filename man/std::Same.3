.TH std::Same 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::Same \- std::Same

.SH Synopsis
   Defined in header <concepts>
   template < class T, class U >    \fI(since C++20)\fP
   concept Same = /* see below */;

   The concept Same<T, U> is satisfied if and only if T and U denote the same type.

   std::Same<T, U> subsumes std::Same<U, T> and vice versa.

.SH Possible implementation

   namespace detail {
       template< class T, class U >
       concept SameHelper = std::is_same_v<T, U>;
   }

   template< class T, class U >
   concept Same = detail::SameHelper<T, U> && detail::SameHelper<U, T>;

.SH See also

   is_same checks if two types are the same
   \fI(C++11)\fP \fI(class template)\fP
