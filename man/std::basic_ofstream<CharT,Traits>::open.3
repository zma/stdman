.TH std::basic_ofstream<CharT,Traits>::open 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_ofstream<CharT,Traits>::open \- std::basic_ofstream<CharT,Traits>::open

.SH Synopsis

void open( const char *filename,                              \fB(1)\fP
ios_base::openmode mode = ios_base::out );
void open( const std::filesystem::path::value_type *filename, \fB(2)\fP \fI(since C++17)\fP
ios_base::openmode mode = ios_base::out );
void open( const std::string &filename,                       \fB(3)\fP \fI(since C++11)\fP
ios_base::openmode mode = ios_base::out );
void open( const std::filesystem::path &filename,             \fB(4)\fP \fI(since C++17)\fP
ios_base::openmode mode = ios_base::out );

Opens and associates the file with name filename with the file stream.
Calls setstate(failbit) on failure.

Calls clear() on success. \fI(since C++11)\fP

1-2) Effectively calls rdbuf()->open(filename, mode | ios_base::out). (see std::basic_filebuf::open for the details on the effects of that call).
Overload \fB(2)\fP is only provided if std::filesystem::path::value_type is not char.
\fI(since C++17)\fP
3-4) Effectively calls (1-2) as if by open(filename.c_str(), mode).

.SH Parameters


filename - the name of the file to be opened
           specifies stream open mode. It is bitmask type, the following constants are defined:

           Constant Explanation
           app      seek to the end of stream before each write
mode     - binary   open in binary_mode
           in       open for reading
           out      open for writing
           trunc    discard the contents of the stream when opening
           ate      seek to the end of stream immediately after open



.SH Return value

\fI(none)\fP

.SH Example


 This section is incomplete
 Reason: no example


.SH See also


        checks if the stream has an associated file
is_open \fI(public member function)\fP
        closes the associated file
close   \fI(public member function)\fP
        opens a file and configures it as the associated character sequence
open    \fI(public member function of std::basic_filebuf<CharT,Traits>)\fP




