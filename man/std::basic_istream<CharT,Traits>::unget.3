.TH std::basic_istream<CharT,Traits>::unget 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_istream<CharT,Traits>::unget \- std::basic_istream<CharT,Traits>::unget

.SH Synopsis

basic_istream& unget();

Makes the most recently extracted character available again.

First clears eofbit. \fI(since C++11)\fP

Then the function behaves as UnformattedInputFunction. After constructing and checking the sentry object, if any ios_base::iostate flags are set, the function sets failbit and returns. Otherwise, calls rdbuf()->sungetc().
If rdbuf()->sungetc() returns Traits::eof(), calls setstate(badbit).
In any case, sets the gcount() counter to zero.

.SH Parameters

\fI(none)\fP

.SH Return value

*this

.SH Exceptions

failure if an error occurred (the error state flag is not goodbit) and exceptions() is set to throw for that state.
If an internal operation throws an exception, it is caught and badbit is set. If exceptions() is set for badbit, the exception is rethrown.

.SH Example


// Run this code

  #include <sstream>
  #include <iostream>

  int main()
  {
      std::istringstream s1("Hello, world.");
      char c1 = s1.get();
      if (s1.unget())
      {
          char c2 = s1.get();
          std::cout << "Got: " << c1 << " got again: " << c2 << '\\n';
      }
  }

.SH Output:

  Got: H got again: H


.SH See also


        moves the next pointer in the input sequence back by one
sungetc \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
        extracts characters
get     \fI(public member function)\fP
        reads the next character without extracting it
peek    \fI(public member function)\fP
        puts character into input stream
putback \fI(public member function)\fP




