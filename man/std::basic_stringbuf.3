.TH std::basic_stringbuf 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_stringbuf \- std::basic_stringbuf

.SH Synopsis
   Defined in header <sstream>
   template<

   class CharT,
   class Traits = std::char_traits<CharT>,
   class Allocator = std::allocator<CharT>

   > class basic_stringbuf : public std::basic_streambuf<CharT, Traits>

   std::basic_stringbuf is a std::basic_streambuf whose associated character sequence is a memory-resident sequence of arbitrary characters, which can be initialized from or made available as an instance of std::basic_string.

   Typical implementations of std::basic_stringbuf hold an object of type std::basic_string or equivalent resizeable sequence container directly as a data member and use it as both the controlled character sequence (the array where the six pointers of std::basic_streambuf are pointing to) and as the associated character sequence (the source of characters for all input operations and the target for the output).

   In addition, a typical implementation holds a data member of type std::ios_base::openmode to indicate the status of the stream (input-only, output-only, input/output, at-end, etc).

   if over-allocation strategy is used by overflow(), an additional high-watermark pointer may be stored to track the last initialized character \fI(since C++11)\fP

   Two specializations for common character types are also defined:

   Defined in header <sstream>
   Type       Definition
   stringbuf  basic_stringbuf<char>
   wstringbuf basic_stringbuf<wchar_t>

.SH Member types

   Member type    Definition
   char_type      CharT
   traits_type    Traits; the program is ill-formed if Traits::char_type is not CharT.
   int_type       Traits::int_type
   pos_type       Traits::pos_type
   off_type       Traits::off_type
   allocator_type Allocator \fI(since C++11)\fP

.SH Member functions

.SH Public member functions
   constructor                     constructs a basic_stringbuf object
                                   \fI(public member function)\fP
   operator=                       assigns a basic_stringbuf object
   \fI(C++11)\fP                         \fI(public member function)\fP
   swap                            swaps two basic_stringbuf objects
   \fI(C++11)\fP                         \fI(public member function)\fP
   destructor                      destructs a basic_stringbuf object and the string it holds
   \fB[virtual]\fP (implicitly declared) \fI(virtual public member function)\fP
   str                             replaces or obtains a copy of the associated character string
                                   \fI(public member function)\fP
.SH Protected member functions
   underflow                       returns the next character available in the input sequence
   \fB[virtual]\fP                       \fI(virtual protected member function)\fP
   pbackfail                       puts a character back into the input sequence
   \fB[virtual]\fP                       \fI(virtual protected member function)\fP
   overflow                        appends a character to the output sequence
   \fB[virtual]\fP                       \fI(virtual protected member function)\fP
   setbuf                          attempts to replace the controlled character sequence with an array
   \fB[virtual]\fP                       \fI(virtual protected member function)\fP
   seekoff                         repositions the next pointer in the input sequence, output sequence, or both, using relative addressing
   \fB[virtual]\fP                       \fI(virtual protected member function)\fP
   seekpos                         repositions the next pointer in the input sequence, output sequence, or both using absolute addressing
   \fB[virtual]\fP                       \fI(virtual protected member function)\fP

.SH Non-member functions

   std::swap(std::basic_stringbuf) specializes the std::swap algorithm
   \fI(C++11)\fP                         \fI(function template)\fP

Inherited from std::basic_streambuf

.SH Member types

   Member type Definition
   char_type   CharT
   traits_type Traits; the program is ill-formed if Traits::char_type is not CharT.
   int_type    Traits::int_type
   pos_type    Traits::pos_type
   off_type    Traits::off_type

.SH Member functions

   destructor            destructs the basic_streambuf object
   \fB[virtual]\fP             \fI(virtual public member function of std::basic_streambuf<CharT,Traits>)\fP
.SH Locales
   pubimbue              invokes imbue()
                         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
   getloc                obtains a copy of the associated locale
                         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
.SH Positioning
   pubsetbuf             invokes setbuf()
                         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
   pubseekoff            invokes seekoff()
                         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
   pubseekpos            invokes seekpos()
                         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
   pubsync               invokes sync()
                         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
.SH Get area
   in_avail              obtains the number of characters immediately available in the get area
                         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
   snextc                advances the input sequence, then reads one character without advancing again
                         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
   sbumpc                reads one character from the input sequence and advances the sequence
                         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
   stossc                advances the input sequence as if by calling sbumpc() and discarding the result
   (deprecated in C++98) \fI(public member function)\fP
   (removed in C++17)
   sgetc                 reads one character from the input sequence without advancing the sequence
                         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
   sgetn                 invokes xsgetn()
                         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
.SH Put area
   sputc                 writes one character to the put area and advances the next pointer
                         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
   sputn                 invokes xsputn()
                         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
.SH Putback
   sputbackc             puts one character back in the input sequence
                         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
   sungetc               moves the next pointer in the input sequence back by one
                         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP

.SH Protected member functions

   constructor   constructs a basic_streambuf object
                 \fI(protected member function)\fP
   operator=     replaces a basic_streambuf object
   \fI(C++11)\fP       \fI(protected member function)\fP
   swap          swaps two basic_streambuf objects
   \fI(C++11)\fP       \fI(protected member function)\fP
.SH Locales
   imbue         changes the associated locale
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
.SH Positioning
   setbuf        replaces the buffer with user-defined array, if permitted
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
   seekoff       repositions the next pointer in the input sequence, output sequence, or both, using relative addressing
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
   seekpos       repositions the next pointer in the input sequence, output sequence, or both using absolute addressing
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
   sync          synchronizes the buffers with the associated character sequence
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
.SH Get area
   showmanyc     obtains the number of characters available for input in the associated input sequence, if known
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
   underflow     reads characters from the associated input sequence to the get area
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
   uflow         reads characters from the associated input sequence to the get area and advances the next pointer
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
   xsgetn        reads multiple characters from the input sequence
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
   eback         returns a pointer to the beginning, current character and the end of the get area
   gptr          \fI(protected member function)\fP
   egptr
   gbump         advances the next pointer in the input sequence
                 \fI(protected member function)\fP
   setg          repositions the beginning, next, and end pointers of the input sequence
                 \fI(protected member function)\fP
.SH Put area
   xsputn        writes multiple characters to the output sequence
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
   overflow      writes characters to the associated output sequence from the put area
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
   pbase         returns a pointer to the beginning, current character and the end of the put area
   pptr          \fI(protected member function)\fP
   epptr
   pbump         advances the next pointer of the output sequence
                 \fI(protected member function)\fP
   setp          repositions the beginning, next, and end pointers of the output sequence
                 \fI(protected member function)\fP
.SH Putback
   pbackfail     puts a character back into the input sequence, possibly modifying the input sequence
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf<CharT,Traits>)\fP
