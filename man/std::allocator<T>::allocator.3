.TH std::allocator<T>::allocator 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::allocator<T>::allocator \- std::allocator<T>::allocator

.SH Synopsis
   allocator() throw();                                               \fI(until C++11)\fP
   allocator() noexcept;                                              \fI(since C++11)\fP
                                                                      \fI(until C++20)\fP
   constexpr allocator() noexcept;                                    \fI(since C++20)\fP
   allocator( const allocator& other ) throw();                                     \fI(until C++11)\fP
   allocator( const allocator& other ) noexcept;                                    \fI(since C++11)\fP
                                                              \fB(1)\fP                   \fI(until C++20)\fP
   constexpr allocator( const allocator& other ) noexcept;                          \fI(since C++20)\fP
   template< class U >                                            \fB(2)\fP                             \fI(until C++11)\fP
   allocator( const allocator<U>& other ) throw();
   template< class U >                                                \fB(3)\fP                         \fI(since C++11)\fP
   allocator( const allocator<U>& other ) noexcept;                                               \fI(until C++20)\fP
   template< class U >                                                                            \fI(since C++20)\fP
   constexpr allocator( const allocator<U>& other ) noexcept;

   Constructs the default allocator. Since the default allocator is stateless, the constructors have no visible effect.

.SH Parameters

   other - another allocator to construct with
