.TH std::pmr::polymorphic_allocator<T>::allocate_object 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::pmr::polymorphic_allocator<T>::allocate_object \- std::pmr::polymorphic_allocator<T>::allocate_object

.SH Synopsis
   template< class U >                       \fI(since C++20)\fP
   U* allocate_object( std::size_t n = 1 );

   Allocates storage for n objects of type U using the underlying memory resource.

   If SIZE_MAX / sizeof(U) < n, throws std::length_error, otherwise equivalent to return static_cast<U*>(allocate_bytes(n * sizeof(U), alignof(U)) );

.SH Parameters

   n - the number of objects to allocate storage for

.SH Return value

   A pointer to the allocated storage.

.SH Notes

   This function was introduced for use with the fully-specialized allocator std::polymorphic_allocator<>, but it may be useful in any specialization as a shortcut to avoid having to rebind from std::polymorphic_allocator<T> to std::polymorphic_allocator<U>.

   Since U is not deduced, it must be provided as a template argument when calling this function.

.SH Exceptions

   Throws std::length_error if n > SIZE_MAX / sizeof(T); may also any exceptions thrown by the call to resource()->allocate.

.SH See also

   allocate_bytes Allocate raw aligned memory from the underlying resource
   (C++20)        \fI(public member function)\fP
   new_object     Allocates and constructs an object
   (C++20)        \fI(public member function)\fP
   allocate       Allocate memory
                  \fI(public member function)\fP
   allocate       allocates uninitialized storage using the allocator
   \fB[static]\fP       \fI(public static member function of std::allocator_traits<Alloc>)\fP
   allocate       allocates memory
                  \fI(public member function of std::pmr::memory_resource)\fP
