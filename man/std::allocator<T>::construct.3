.TH std::allocator<T>::construct 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::allocator<T>::construct \- std::allocator<T>::construct

.SH Synopsis

  Defined in header <memory>
  void construct( pointer p, const_reference val ); \fB(1)\fP \fI(until C++11)\fP
  template< class U, class... Args >                    \fI(since C++11)\fP
  void construct( U* p, Args&&... args );           \fB(2)\fP (deprecated in C++17)
                                                        (removed in C++20)

  Constructs an object of type T in allocated uninitialized storage pointed to by p, using placement-new
  1) Calls new((void *)p) T(val)
  2) Calls ::new((void *)p) U(std::forward<Args>(args)...)

.SH Parameters


  p       - pointer to allocated uninitialized storage
  val     - the value to use as the copy constructor argument
  args... - the constructor arguments to use


.SH Return value

  \fI(none)\fP

.SH See also



  construct      constructs an object in the allocated storage
                 \fI(function template)\fP
  \fB[static]\fP
                 allocation functions
  operator_new   \fI(function)\fP
  operator_new[]




