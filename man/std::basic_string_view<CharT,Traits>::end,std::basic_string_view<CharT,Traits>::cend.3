.TH std::basic_string_view<CharT,Traits>::end,std::basic_string_view<CharT,Traits>::cend 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_string_view<CharT,Traits>::end,std::basic_string_view<CharT,Traits>::cend \- std::basic_string_view<CharT,Traits>::end,std::basic_string_view<CharT,Traits>::cend

.SH Synopsis
   constexpr const_iterator end() const noexcept;   \fI(since C++17)\fP
   constexpr const_iterator cend() const noexcept;  \fI(since C++17)\fP

   Returns an iterator to the character following the last character of the view. This character acts as a placeholder, attempting to access it results in undefined behavior.

   range-begin-end.svg

.SH Parameters

   \fI(none)\fP

.SH Return value

   const_iterator to the character following the last character.

.SH Complexity

   Constant

.SH Example

   
// Run this code

 #include <iostream>
 #include <iterator>
 #include <string_view>

 int main()
 {
     std::string_view str_view("abcd");

     auto end = str_view.end();
     auto cend = str_view.cend();

     std::cout << *std::prev(end) << '\\n';
     std::cout << *std::prev(cend) << '\\n';

     std::cout << std::boolalpha << (end == cend) << '\\n';
 }

.SH Output:

 d
 d
 true

.SH See also

   begin  returns an iterator to the beginning
   cbegin \fI(public member function)\fP
