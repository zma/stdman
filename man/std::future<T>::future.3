.TH std::future<T>::future 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::future<T>::future \- std::future<T>::future

.SH Synopsis
   future() noexcept;                      \fB(1)\fP \fI(since C++11)\fP
   future( future&& other ) noexcept;      \fB(2)\fP \fI(since C++11)\fP
   future( const future& other ) = delete; \fB(3)\fP \fI(since C++11)\fP

   Constructs a std::future object.

   1) Default constructor. Constructs a std::future with no shared state. After construction, valid() == false.
   2) Move constructor. Constructs a std::future with the shared state of other using move semantics. After construction, other.valid() == false.
   3) std::future is not CopyConstructible.

.SH Parameters

   other - another std::future to acquire shared state from
