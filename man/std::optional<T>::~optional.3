.TH std::optional<T>::~optional 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::optional<T>::~optional \- std::optional<T>::~optional

.SH Synopsis
   ~optional();  \fI(since C++17)\fP

   If the object contains a value and the type T is not trivially destructible (see std::is_trivially_destructible), destroys the contained value by calling its destructor, as if by value().T::~T().

   Otherwise, does nothing.

.SH Notes

   If T is trivially-destructible, then this destructor is also trivial, so optional<T> is also trivially-destructible.
