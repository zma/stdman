.TH std::set_unexpected 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::set_unexpected \- std::set_unexpected

.SH Synopsis

  Defined in header <exception>
  std::unexpected_handler set_unexpected( std::unexpected_handler f ) throw();   \fI(until C++11)\fP
                                                                                 \fI(since C++11)\fP
  std::unexpected_handler set_unexpected( std::unexpected_handler f ) noexcept;  \fB(deprecated)\fP
                                                                                 (removed in C++17)

  Makes f the new global std::unexpected_handler and returns the previously installed std::unexpected_handler.

  This function is thread-safe. Every call to std::set_unexpected synchronizes-with (see std::memory_order) the subsequent calls to std::set_unexpected and std::get_unexpected \fI(since C++11)\fP


.SH Parameters


  f - pointer to function of type std::unexpected_handler, or null pointer


.SH Return value

  The previously-installed unexpected handler, or a null pointer value if none was installed.

.SH See also



  unexpected                function called when dynamic exception specification is violated
                            \fI(function)\fP
  (removed in C++17)

  get_unexpected            obtains the current unexpected_handler
                            \fI(function)\fP
  \fI(C++11)\fP(removed in C++17)

  unexpected_handler        the type of the function called by std::unexpected
                            \fI(typedef)\fP
  (removed in C++17)




