.TH std::basic_string<CharT,Traits,Allocator>::ends_with 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_string<CharT,Traits,Allocator>::ends_with \- std::basic_string<CharT,Traits,Allocator>::ends_with

.SH Synopsis

  bool ends_with(std::basic_string_view<CharT, Traits> x) const noexcept; \fB(1)\fP \fI(since C++20)\fP
  bool ends_with(CharT x) const noexcept;                                 \fB(2)\fP \fI(since C++20)\fP
  bool ends_with(const CharT* x) const;                                   \fB(3)\fP \fI(since C++20)\fP

  Checks if the string ends with the given suffix, where
  1) the suffix is a string view (which may be a result of implicit conversion from another std::basic_string)
  2) the suffix is a single character
  3) the suffix is a C-style string
  All three overloads effectively return std::basic_string_view<CharT, Traits>(data(), size()).ends_with(x);

.SH Parameters


  x - a character sequence or a single character to compare to the end of the string


.SH Return value

  true if the string ends with the provided suffix, false otherwise.

.SH Example


   This section is incomplete
   Reason: no example


.SH See also



  starts_with checks if the string starts with the given prefix
              \fI(public member function)\fP
  (C++20)

  starts_with checks if the string view starts with the given prefix
              \fI(public member function of std::basic_string_view<CharT,Traits>)\fP
  (C++20)

  ends_with   checks if the string view ends with the given suffix
              \fI(public member function of std::basic_string_view<CharT,Traits>)\fP
  (C++20)
              compares two strings
  compare     \fI(public member function)\fP
              returns a substring
  substr      \fI(public member function)\fP




