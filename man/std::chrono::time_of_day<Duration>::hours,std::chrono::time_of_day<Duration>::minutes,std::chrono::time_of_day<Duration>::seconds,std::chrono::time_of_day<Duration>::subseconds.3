.TH std::chrono::time_of_day<Duration>::hours,std::chrono::time_of_day<Duration>::minutes,std::chrono::time_of_day<Duration>::seconds,std::chrono::time_of_day<Duration>::subseconds 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::time_of_day<Duration>::hours,std::chrono::time_of_day<Duration>::minutes,std::chrono::time_of_day<Duration>::seconds,std::chrono::time_of_day<Duration>::subseconds \- std::chrono::time_of_day<Duration>::hours,std::chrono::time_of_day<Duration>::minutes,std::chrono::time_of_day<Duration>::seconds,std::chrono::time_of_day<Duration>::subseconds

.SH Synopsis

  member of all specializations
  constexpr std::chrono::hours hours() const noexcept;                                                                     \fB(1)\fP
  member of all specializations except time_of_day<std::chrono::hours>
  constexpr std::chrono::minutes minutes() const noexcept;                                                                 \fB(2)\fP
  member only of the time_of_day<std::chrono::seconds> and time_of_day<std::chrono::duration<Rep, Period>> specializations
  constexpr std::chrono::seconds seconds() const noexcept;                                                                 \fB(3)\fP
  member only of the time_of_day<std::chrono::duration<Rep, Period>> partial specialization
  constexpr precision subseconds() const noexcept;                                                                         \fB(4)\fP

  Obtains the components of the stored "broken down" time.

.SH Return value

  Let since_midnight be the stored duration:
  1) the integral number of hours since_midnight is after 00:00:00.
  2) the integral number of minutes since_midnight is after (00:00:00 + hours()).
  3) the integral number of seconds since_midnight is after (00:00:00 + hours() + minutes()).
  4) the integral number of fractional seconds since_midnight is after (00:00:00 + hours() + minutes() + seconds()).



