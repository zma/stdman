.TH std::back_insert_iterator<Container>::operator++ 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::back_insert_iterator<Container>::operator++ \- std::back_insert_iterator<Container>::operator++

.SH Synopsis

  back_insert_iterator& operator++();                 \fI(until C++20)\fP
  constexpr back_insert_iterator& operator++();       \fI(since C++20)\fP
  back_insert_iterator& operator++( int );            \fI(until C++20)\fP
  constexpr back_insert_iterator& operator++( int );  \fI(since C++20)\fP

  Does nothing. These operator overloads are provided to satisfy the requirements of LegacyOutputIterator. They make it possible for the expressions *iter++=value and *++iter=value to be used to output (insert) a value into the underlying container.

.SH Parameters

  \fI(none)\fP

.SH Return value

  *this



