.TH std::poisson_distribution 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::poisson_distribution \- std::poisson_distribution

.SH Synopsis

  Defined in header <random>
  template< class IntType = int >  \fI(since C++11)\fP
  class poisson_distribution;

  Produces random non-negative integer values i, distributed according to discrete probability function:

        \\(P(i | \\mu) = \\frac{e^{-\\mu}\\mu^i}{i!}\\)P(i|μ) =

        e-μ
        ·μi
        i!


  The value obtained is the probability of exactly i occurrences of a random event if the expected, mean number of its occurrence under the same conditions (on the same time/space interval) is μ.
  std::poisson_distribution satisfies RandomNumberDistribution

.SH Template parameters


  IntType - The result type generated by the generator. The effect is undefined if this is not one of short, int, long, long long, unsigned short, unsigned int, unsigned long, or unsigned long long.



.SH Member types


  Member type Definition
  result_type IntType
  param_type  the type of the parameter set, see RandomNumberDistribution.


.SH Member functions


                constructs new distribution
  constructor   \fI(public member function)\fP
                resets the internal state of the distribution
  reset         \fI(public member function)\fP

.SH Generation

                generates the next random number in the distribution
  operator()    \fI(public member function)\fP

.SH Characteristics

                returns the mean distribution parameter (mean number of occurrences of the event)
  mean          \fI(public member function)\fP
                gets or sets the distribution parameter object
  param         \fI(public member function)\fP
                returns the minimum potentially generated value
  min           \fI(public member function)\fP
                returns the maximum potentially generated value
  max           \fI(public member function)\fP


.SH Non-member functions


             compares two distribution objects
  operator== \fI(function)\fP
  operator!=
             performs stream input and output on pseudo-random number distribution
  operator<< \fI(function template)\fP
  operator>>


.SH Example

  
// Run this code

    #include <iostream>
    #include <iomanip>
    #include <string>
    #include <map>
    #include <random>
    int main()
    {
        std::random_device rd;
        std::mt19937 gen(rd());

        // if an event occurs 4 times a minute on average
        // how often is it that it occurs n times in one minute?
        std::poisson_distribution<> d(4);

        std::map<int, int> hist;
        for(int n=0; n<10000; ++n) {
            ++hist[d(gen)];
        }
        for(auto p : hist) {
            std::cout << p.first <<
                    ' ' << std::string(p.second/100, '*') << '\\n';
        }
    }

.SH Output:

    0 *
    1 *******
    2 **************
    3 *******************
    4 *******************
    5 ***************
    6 **********
    7 *****
    8 **
    9 *
    10
    11
    12
    13


.SH External links

  Weisstein,_Eric_W._"Poisson_Distribution." From MathWorld--A Wolfram Web Resource.



