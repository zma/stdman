.TH std::execution::seq,std::execution::par,std::execution::par_unseq,std::execution::unseq 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::execution::seq,std::execution::par,std::execution::par_unseq,std::execution::unseq \- std::execution::seq,std::execution::par,std::execution::par_unseq,std::execution::unseq

.SH Synopsis

  Defined in header <execution>
  inline constexpr std::execution::sequenced_policy seq { /* unspecified */ };                   \fI(since C++17)\fP
  inline constexpr std::execution::parallel_policy par { /* unspecified */ };                    \fI(since C++17)\fP
  inline constexpr std::execution::parallel_unsequenced_policy par_unseq { /* unspecified */ };  \fI(since C++17)\fP
  inline constexpr std::execution::unsequenced_policy unseq { /* unspecified */ };               \fI(since C++20)\fP

  std::execution::seq, std::execution::par, std::execution::par_unseq, and std::execution::unseq are instances of the execution policy types std::execution::sequenced_policy, std::execution::parallel_policy, std::execution::parallel_unsequenced_policy, and std::execution::unsequenced_policy respectively. They are used to specify the execution policy of parallel algorithms - i.e., the kinds of parallelism allowed.
  Additional execution policies may be provided by a standard library implementation (possible future additions may include std::parallel::cuda and std::parallel::opencl)

.SH See also



  sequenced_policy
  parallel_policy
  parallel_unsequenced_policy
  unsequenced_policy          execution policy types
                              \fI(class)\fP
  \fI(C++17)\fP
  \fI(C++17)\fP
  \fI(C++17)\fP
  (C++20)




