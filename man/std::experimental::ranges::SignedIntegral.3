.TH std::experimental::ranges::SignedIntegral 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::ranges::SignedIntegral \- std::experimental::ranges::SignedIntegral

.SH Synopsis

Defined in header <experimental/ranges/concepts>
template < class T >                                                    (ranges TS)
concept bool SignedIntegral = Integral<T> && std::is_signed<T>::value;

The concept SignedIntegral<T> is satisfied if and only if T is an integral type and std::is_signed<T>::value is true.
There need not be any subsumption relationship between SignedIntegral<T> and std::is_signed<T>::value.

.SH Notes

SignedIntegral<T> may be satisfied by a type that is not a signed_integer_type, for example, char (on a system where char is signed).

.SH See also



is_integral checks if a type is an integral type
            \fI(class template)\fP
\fI(C++11)\fP

is_signed   checks if a type is a signed arithmetic type
            \fI(class template)\fP
\fI(C++11)\fP




