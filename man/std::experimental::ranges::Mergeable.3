.TH std::experimental::ranges::Mergeable 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::ranges::Mergeable \- std::experimental::ranges::Mergeable

.SH Synopsis

  template < class I1, class I2, class Out, class R = ranges::less<>,
  class P1 = ranges::identity, class P2 = ranges::identity >
  concept bool Mergeable =
  InputIterator<I1> &&
  InputIterator<I2> &&                                                               (ranges TS)
  WeaklyIncrementable<Out> &&
  IndirectlyCopyable<I1, Out> &&
  IndirectlyCopyable<I2, Out> &&
  IndirectStrictWeakOrder<R, ranges::projected<I1, P1>, ranges::projected<I2, P2>>;

  The Mergeable concept specifies the common requirements of algorithms that merge sorted sequences into an output sequence by copying the elements (for example, ranges::merge).



