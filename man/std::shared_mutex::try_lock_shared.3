.TH std::shared_mutex::try_lock_shared 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::shared_mutex::try_lock_shared \- std::shared_mutex::try_lock_shared

.SH Synopsis

bool try_lock_shared();  \fI(since C++17)\fP

Tries to lock the mutex in shared mode. Returns immediately. On successful lock acquisition returns true, otherwise returns false.
This function is allowed to fail spuriously and return false even if the mutex is not currenly exclusively locked by any other thread.
Prior unlock() operation on the same mutex synchronizes-with (as defined in std::memory_order) this operation if it returns true.
The behavior is undefined if the calling thread already owns the mutex in any mode.

.SH Parameters

\fI(none)\fP

.SH Return value

true if the lock was acquired successfully, otherwise false.

.SH Exceptions

\fI(none)\fP

.SH Example


 This section is incomplete
 Reason: no example


.SH See also


                locks the mutex, blocks if the mutex is not available
lock            \fI(public member function)\fP
                tries to lock the mutex for shared ownership, returns if the mutex is not available
try_lock_shared \fI(public member function)\fP
                unlocks the mutex (shared ownership)
unlock_shared   \fI(public member function)\fP




