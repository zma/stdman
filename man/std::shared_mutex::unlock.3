.TH std::shared_mutex::unlock 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::shared_mutex::unlock \- std::shared_mutex::unlock

.SH Synopsis

void unlock();  \fI(since C++17)\fP

Unlocks the mutex.
The mutex must be locked by the current thread of execution, otherwise, the behavior is undefined.
This operation synchronizes-with (as defined in std::memory_order) any subsequent lock operation that obtains ownership of the same mutex.

.SH Parameters

\fI(none)\fP

.SH Return value

\fI(none)\fP

.SH Exceptions

\fI(none)\fP

.SH Notes

unlock() is usually not called directly: std::unique_lock and std::lock_guard are used to manage exclusive locking.

.SH Example


 This section is incomplete
 Reason: no example


.SH See also


         locks the mutex, blocks if the mutex is not available
lock     \fI(public member function)\fP
         tries to lock the mutex, returns if the mutex is not available
try_lock \fI(public member function)\fP




