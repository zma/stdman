.TH std::move_iterator<Iter>::operator*,-> 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::move_iterator<Iter>::operator*,-> \- std::move_iterator<Iter>::operator*,->

.SH Synopsis

reference operator* () const;                   \fI(until C++17)\fP
constexpr reference operator* () const;         \fI(since C++17)\fP
pointer operator->() const;             \fB(1)\fP                   \fI(until C++17)\fP
constexpr pointer operator->() const;       \fB(2)\fP               \fI(since C++17)\fP
                                                              (deprecated in C++20)

Returns a rvalue-reference or pointer to the current element.

1) Equivalent to std::move(*base());              \fI(until C++17)\fP
1) Equivalent to static_cast<reference>(*base()); \fI(since C++17)\fP

2) Equivalent to base().

.SH Parameters

\fI(none)\fP

.SH Return value

Rvalue-reference or pointer to the current element.

.SH Notes

Note that \fB(2)\fP returns a pointer. When dereferencing a pointer the returned value is an lvalue. This may lead to unintended behavior.

.SH Example


 This section is incomplete
 Reason: no example


.SH See also


           accesses an element by index
operator[] \fI(public member function)\fP




