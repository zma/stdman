.TH std::literals::string_view_literals::operator""sv 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::literals::string_view_literals::operator""sv \- std::literals::string_view_literals::operator""sv

.SH Synopsis

Defined in header <string_view>
constexpr string_view operator "" sv(const char* str, size_t len) noexcept;        \fB(1)\fP \fI(since C++17)\fP
constexpr u8string_view operator "" sv(const char8_t* str, size_t len) noexcept;   \fB(2)\fP \fI(since C++20)\fP
constexpr u16string_view operator "" sv(const char16_t* str, size_t len) noexcept; \fB(3)\fP \fI(since C++17)\fP
constexpr u32string_view operator "" sv(const char32_t* str, size_t len) noexcept; \fB(4)\fP \fI(since C++17)\fP
constexpr wstring_view operator "" sv(const wchar_t* str, size_t len) noexcept;    \fB(5)\fP \fI(since C++17)\fP

Forms a string view of a character literal.
1) returns std::string_view{str, len}
2) returns std::u8string_view{str, len}
3) returns std::u16string_view{str, len}
4) returns std::u32string_view{str, len}
5) returns std::wstring_view{str, len}

.SH Parameters


str - pointer to the beginning of the raw character array literal
len - length of the raw character array literal


.SH Return value

The string_view literal.

.SH Notes

These operators are declared in the namespace std::literals::string_view_literals, where both literals and string_view_literals are inline namespaces. Access to these operators can be gained with using namespace std::literals, using namespace std::string_view_literals, and using namespace std::literals::string_view_literals.

.SH Example


// Run this code

  #include <string_view>
  #include <iostream>

  int main()
  {
      using namespace std::literals;

      std::string_view s1 = "abc\\0\\0def";
      std::string_view s2 = "abc\\0\\0def"sv;
      std::cout << "s1: " << s1.size() << " \\"" << s1 << "\\"\\n";
      std::cout << "s2: " << s2.size() << " \\"" << s2 << "\\"\\n";
  }

.SH Possible output:

  s1: 3 "abc"
  s2: 8 "abc^@^@def"


.SH See also


              constructs a basic_string_view
constructor   \fI(public member function)\fP




