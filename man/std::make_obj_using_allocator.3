.TH std::make_obj_using_allocator 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::make_obj_using_allocator \- std::make_obj_using_allocator

.SH Synopsis
   Defined in header <memory>
   template< class T, class Alloc, class... Args >                   \fI(since C++20)\fP
   T make_obj_using_allocator( const Alloc& alloc, Args&&... args )

   Creates an object of the given type T by means of uses-allocator construction

   Equivalent to

 return std::make_from_tuple<T>(
     std::uses_allocator_construction_args<T>(alloc, std::forward<Args>(args)...)
 );

.SH Parameters

   alloc - the allocator to use.
   args  - the arguments to pass to T's constructor

.SH Return value

   The newly-created object of type T

.SH Exceptions

   May throw any exception thrown by the constructor of T, typically including std::bad_alloc

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   uses_allocator_construction_args        prepares the argument list matching the flavor of uses-allocator construction required by the given type
   (C++20)                                 \fI(function template)\fP
   uninitialized_construct_using_allocator creates an object of the given type at specified memory location by means of uses-allocator construction
   (C++20)                                 \fI(function template)\fP
