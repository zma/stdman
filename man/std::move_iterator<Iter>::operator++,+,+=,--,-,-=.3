.TH std::move_iterator<Iter>::operator++,+,+=,--,-,-= 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::move_iterator<Iter>::operator++,+,+=,--,-,-= \- std::move_iterator<Iter>::operator++,+,+=,--,-,-=

.SH Synopsis
   move_iterator& operator++();                                          \fI(until C++17)\fP
   constexpr move_iterator& operator++();                                \fI(since C++17)\fP
   move_iterator& operator--();                                                        \fI(until C++17)\fP
   constexpr move_iterator& operator--();                                              \fI(since C++17)\fP
   move_iterator operator++( int );                                                                  \fI(until C++17)\fP
   constexpr move_iterator operator++( int );                                                        \fI(since C++17)\fP
   move_iterator operator--( int );                                                                                \fI(until C++17)\fP
   constexpr move_iterator operator--( int );                    \fB(1)\fP                                               \fI(since C++17)\fP
   move_iterator operator+( difference_type n ) const;               \fB(2)\fP                                                         \fI(until C++17)\fP
   constexpr move_iterator operator+( difference_type n ) const;         \fB(3)\fP                                                     \fI(since C++17)\fP
   move_iterator operator-( difference_type n ) const;                                 \fB(4)\fP                                                     \fI(until C++17)\fP
   constexpr move_iterator operator-( difference_type n ) const;                                     \fB(5)\fP                                       \fI(since C++17)\fP
   move_iterator& operator+=( difference_type n );                                                                 \fB(6)\fP                                       \fI(until C++17)\fP
   constexpr move_iterator& operator+=( difference_type n );                                                                     \fB(7)\fP                         \fI(since C++17)\fP
   move_iterator& operator-=( difference_type n );                                                                                             \fB(8)\fP                         \fI(until C++17)\fP
   constexpr move_iterator& operator-=( difference_type n );                                                                                                               \fI(since C++17)\fP

   Increments or decrements the iterator.

   1-2) Pre-increments or pre-decrements by one respectively.
   3-4) Post-increments or post-decrements by one respectively.
   5-6) Returns an iterator which is advanced by n or -n positions respectively.
   7-8) Advances the iterator by n or -n positions respectively.

.SH Return value

   1-2) *this
   3-4) a copy of *this that was made before the change
   5-6) move_iterator(base()+n) or move_iterator(base()-n) respectively.
   7-8) *this

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   operator+ advances the iterator
             \fI(function template)\fP
