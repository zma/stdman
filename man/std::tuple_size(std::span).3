.TH std::tuple_size(std::span) 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::tuple_size(std::span) \- std::tuple_size(std::span)

.SH Synopsis

  Defined in header <span>
  template< class T, std::size_t N >
  class tuple_size< std::span<T, N> > :                                 \fB(1)\fP \fI(since C++20)\fP
  public std::integral_constant<std::size_t, N>
  { };
  template< class T >                                                   \fB(2)\fP \fI(since C++20)\fP
  class tuple_size< std::span<T, std::dynamic_extent> >; // Not defined

  Provides access to the number of elements in a static-extent span as a compile-time constant expression. If the span has dynamic extent, the tuple_size specialization is an incomplete type.

  Inherited from std::integral_constant


.SH Member constants



  value    N, the number of elements in the span
           \fI(public static member constant)\fP
  \fB[static]\fP


.SH Member functions


                       converts the object to std::size_t, returns value
  operator std::size_t \fI(public member function)\fP

  operator()           returns value
                       \fI(public member function)\fP
  \fI(C++14)\fP


.SH Member types


  Type       Definition
  value_type std::size_t
  type       std::integral_constant<std::size_t, value>


.SH Example


   This section is incomplete
   Reason: no example


.SH See also


             obtains the size of tuple at compile time
  tuple_size \fI(class template specialization)\fP




