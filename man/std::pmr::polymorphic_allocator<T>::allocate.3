.TH std::pmr::polymorphic_allocator<T>::allocate 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::pmr::polymorphic_allocator<T>::allocate \- std::pmr::polymorphic_allocator<T>::allocate

.SH Synopsis

  T* allocate( std::size_t n );                \fI(since C++17)\fP
                                               \fI(until C++20)\fP
  [[nodiscard]] T* allocate( std::size_t n );  \fI(since C++20)\fP

  Allocates storage for n objects of type T using the underlying memory resource. Equivalent to return static_cast<T*>(resource()->allocate(n * sizeof(T), alignof(T)));.

.SH Parameters


  n - the number of objects to allocate storage for


.SH Return value

  A pointer to the allocated storage.

.SH Exceptions

  Throws std::length_error if n > SIZE_MAX / sizeof(T); may also any exceptions thrown by the call to resource()->allocate.

.SH See also



  allocate_bytes  Allocate raw aligned memory from the underlying resource
                  \fI(public member function)\fP
  (C++20)

  allocate_object Allocates raw memory suitable for an object or an array
                  \fI(public member function)\fP
  (C++20)

  new_object      Allocates and constructs an object
                  \fI(public member function)\fP
  (C++20)

  allocate        allocates uninitialized storage using the allocator
                  \fI(public static member function of std::allocator_traits<Alloc>)\fP
  \fB[static]\fP
                  allocates memory
  allocate        \fI(public member function of std::pmr::memory_resource)\fP




