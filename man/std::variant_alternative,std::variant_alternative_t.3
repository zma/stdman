.TH std::variant_alternative,std::variant_alternative_t 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::variant_alternative,std::variant_alternative_t \- std::variant_alternative,std::variant_alternative_t

.SH Synopsis

  Defined in header <variant>
  template <std::size_t I, class T>                                            \fB(1)\fP \fI(since C++17)\fP
  struct variant_alternative; /* undefined */
  template <size_t I, class... Types>                                          \fB(2)\fP \fI(since C++17)\fP
  struct variant_alternative<I, variant<Types...>>;
  template <size_t I, class T> class variant_alternative<I, const T>;
  template <size_t I, class T> class variant_alternative<I, volatile T>;       \fB(3)\fP \fI(since C++17)\fP
  template <size_t I, class T> class variant_alternative<I, const volatile T>;

  Provides compile-time indexed access to the types of the alternatives of the possibly cv-qualified variant, combining cv-qualifications of the variant (if any) with the cv-qualifications of the alternative.
  Formally,
  2) meets the TransformationTrait requirements with a member typedef type equal to the type of the alternative with index I
  3) meets the TransformationTrait requirements with a member typedef type that names, respectively, std::add_const_t<std::variant_alternative<I,T>>, std::add_volatile_t<std::variant_alternative<I,T>>, and std::add_cv_t<std::variant_alternative<I,T>>

.SH Member types


  Member type Definition
  type        the type of Ith alternative of the variant, where I must be in [0, sizeof...(Types)), otherwise the program is ill-formed.


  Helper template alias


  template <size_t I, class T>                                             \fI(since C++17)\fP
  using variant_alternative_t = typename variant_alternative<I, T>::type;


.SH Example


   This section is incomplete
   Reason: no example


  Defect reports

  The following behavior-changing defect reports were applied retroactively to previously published C++ standards.

  DR       Applied to Behavior as published                              Correct behavior
  LWG_2974 C++17      out-of-bounds index resulted in undefined behavior made ill-formed


.SH See also



  variant_size   obtains the size of the variant's list of alternatives at compile time
  variant_size_v \fI(class template)\fP (variable template)

  \fI(C++17)\fP
                 obtains the type of the specified element
  tuple_element  \fI(class template specialization)\fP




