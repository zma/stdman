.TH std::filesystem::path::remove_filename 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::filesystem::path::remove_filename \- std::filesystem::path::remove_filename

.SH Synopsis

path& remove_filename() \fB(1)\fP \fI(since C++17)\fP

Removes a single generic-format filename component (as returned by filename) from the given generic-format path.
After this function completes, has_filename returns false.

.SH Parameters

\fI(none)\fP

.SH Return value

*this

.SH Exceptions

\fI(none)\fP

.SH Example


// Run this code

  #include <iostream>
  #include <filesystem>
  namespace fs = std::filesystem;

  int main()
  {

      std::cout << fs::path("foo/bar").remove_filename() << '\\n'
                << fs::path("foo/").remove_filename() << '\\n'
                << fs::path("/foo").remove_filename() << '\\n'
                << fs::path("/").remove_filename() << '\\n';
  }

.SH Output:

  "foo/"
  "foo/"
  "/"
  "/"


.SH See also


                 returns the filename path component
filename         \fI(public member function)\fP
                 replaces the last path component with another path
replace_filename \fI(public member function)\fP
                 checks if the corresponding path element is not empty
has_filename     \fI(public member function)\fP




