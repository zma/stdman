.TH std::chrono::gps_clock 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::gps_clock \- std::chrono::gps_clock

.SH Synopsis

  Defined in header <chrono>
  class gps_clock;            \fI(since C++20)\fP

  The clock std::chrono::gps_clock is a Clock that represents Global Positioning System (GPS) time. It measures time since 00:00:00, 6 January 1980 UTC.
  Leap seconds are not inserted into GPS. Thus, every time a leap second is inserted into UTC, UTC falls another second behind GPS. As of December 2017, UTC is 18 seconds behind GPS, reflecting the 18 leap seconds inserted between 1980 and 2017. Thus, 2018-01-01 00:00:00 UTC is equivalent to 2018-01-01 00:00:18 GPS. GPS is a constant 19 seconds behind TAI.
  gps_clock meets the Clock requirements. It does not meet the TrivialClock requirements unless the implementation can guarantee that now() does not throw an exception.

  Time point family


  Defined in namespace std::chrono
  template<class Duration>                                                     \fI(since C++20)\fP
  using gps_time = std::chrono::time_point<std::chrono::gps_clock, Duration>;
  using gps_seconds = gps_time<std::chrono::seconds>;                          \fI(since C++20)\fP



  operator<<_(std::chrono::gps_time)  performs stream output on a gps_time
                                      \fI(function template)\fP
  (C++20)

  from_stream_(std::chrono::gps_time) parses a gps_time from a stream according to the provided format
                                      \fI(function template)\fP
  (C++20)

  to_stream_(std::chrono::gps_time)   outputs a gps_time into a stream according to the provided format
                                      \fI(function template)\fP
  (C++20)


.SH Member types


  Member type Definition
  rep         signed arithmetic type representing the number of ticks in the clock's duration
  period      a std::ratio type representing the tick period of the clock, in seconds
  duration    std::chrono::duration<rep, period>, capable of representing negative durations
  time_point  std::chrono::time_point<std::chrono::gps_clock>


.SH Member constants



  constexpr bool is_steady true if the time between ticks is always constant, i.e. calls to now() return values that increase monotonically even in case of some external clock adjustment, otherwise false
                           \fI(public static member constant)\fP
  \fB[static]\fP


.SH Member functions



  now      returns a std::chrono::time_point representing the current point in time
           \fI(public static member function)\fP
  \fB[static]\fP

  to_utc   converts a gps_time to utc_time
           \fI(public static member function)\fP
  \fB[static]\fP

  from_utc converts a utc_time to gps_time
           \fI(public static member function)\fP
  \fB[static]\fP




