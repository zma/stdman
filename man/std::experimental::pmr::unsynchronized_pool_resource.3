.TH std::experimental::pmr::unsynchronized_pool_resource 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::pmr::unsynchronized_pool_resource \- std::experimental::pmr::unsynchronized_pool_resource

.SH Synopsis

Defined in header <experimental/memory_resource>
class unsynchronized_pool_resource : public memory_resource;  (library fundamentals TS)

The class std::experimental::pmr::unsynchronized_pool_resource is a general-purpose memory resource class with the following properties:

* It owns the allocated memory and frees it on destruction, even if deallocate has not been called for some of the allocated blocks.
* It consists of a collection of pools that serves request for different block sizes. Each pool manages a collection of chunks that are then divided into blocks of uniform size.
* Calls to do_allocate are dispatched to the pool serving the smallest blocks accommodating the requested size.
* Exhausting memory in the pool causes the next allocation request for that pool to allocate an additional chunk of memory from the upstream allocator to replenish the pool. The chunk size obtained increases geometrically.
* Allocations requests that exceed the largest block size are served from the upstream allocator directly.
* The largest block size and maximum chunk size may be tuned by passing a std::experimental::pmr::pool_options struct to its constructor.

unsynchronized_pool_resource is not thread-safe, and cannot be accessed from multiple threads simultaneously; use synchronized_pool_resource if access from multiple threads is required.

.SH Member functions


                  Constructs a unsynchronized_pool_resource
constructor       \fI(public member function)\fP

destructor        Destroys a unsynchronized_pool_resource, releasing all allocated memory
                  \fI(virtual public member function)\fP
\fB[virtual]\fP

operator=         Copy assignment operator is deleted. unsynchronized_pool_resource is not copy assignable
                  \fI(public member function)\fP
[deleted]

.SH Public member functions

                  Release all allocated memory
release           \fI(public member function)\fP
                  Returns a pointer to the upstream memory resource
upstream_resource \fI(public member function)\fP
                  Returns the options that control the pooling behavior of this resource
options           \fI(public member function)\fP

.SH Protected member functions


do_allocate       Allocate memory
                  \fI(virtual protected member function)\fP
\fB[virtual]\fP

do_deallocate     Return memory to the pool
                  \fI(virtual protected member function)\fP
\fB[virtual]\fP

do_is_equal       Compare for equality with another memory_resource
                  \fI(virtual protected member function)\fP
\fB[virtual]\fP




