.TH std::bit_or 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::bit_or \- std::bit_or

.SH Synopsis
   Defined in header <functional>
   template< class T >             \fI(until C++14)\fP
   struct bit_or;
   template< class T = void >      \fI(since C++14)\fP
   struct bit_or;

   Function object for performing bitwise OR. Effectively calls operator| on type T.

.SH Specializations

   The standard library provides a specialization of std::bit_or when T is not specified, which leaves the parameter types and return type to be deduced.
                                                                                                                                                          \fI(since C++14)\fP
   bit_or<void> function object implementing x | y deducing argument and return types
                \fI(class template specialization)\fP

.SH Member types

   Type                                      Definition \fI(until C++20)\fP
   result_type(deprecated in C++17)          T
   first_argument_type(deprecated in C++17)  T
   second_argument_type(deprecated in C++17) T

.SH Member functions

   operator() returns the result of bitwise OR of two arguments
              \fI(public member function)\fP

std::bit_or::operator()

   T operator()( const T& lhs, const T& rhs ) const;            \fI(until C++14)\fP
   constexpr T operator()( const T& lhs, const T& rhs ) const;  \fI(since C++14)\fP

   Returns the result of bitwise OR of lhs and rhs.

.SH Parameters

   lhs, rhs - values to compute bitwise OR of

.SH Return value

   The result of lhs | rhs.

.SH Exceptions

   \fI(none)\fP

.SH Possible implementation

   constexpr T operator()(const T &lhs, const T &rhs) const
   {
       return lhs | rhs;
   }
