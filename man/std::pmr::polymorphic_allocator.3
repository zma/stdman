.TH std::pmr::polymorphic_allocator 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::pmr::polymorphic_allocator \- std::pmr::polymorphic_allocator

.SH Synopsis
   template< class T >              \fI(since C++17)\fP
   class polymorphic_allocator;     \fI(until C++20)\fP
   template< class T = std::byte >  \fI(since C++20)\fP
   class polymorphic_allocator;

   The class template std::pmr::polymorphic_allocator is an Allocator whose allocation behavior depends on the memory resource it is constructed with. Thus, different instances of polymorphic_allocator can exhibit entirely different allocation behavior. This runtime polymorphism allows objects using polymorphic_allocator to behave as if they used different allocator types at run time despite the identical static allocator type.

   All specializations of polymorphic_allocator meet the Allocator completeness requirements.

.SH Member types

   Member type definition
   value_type  T

.SH Member functions

   constructor                           Constructs a polymorphic_allocator
                                         \fI(public member function)\fP
   destructor                            Implicitly declared destructor
   (implicitly declared)                 \fI(public member function)\fP
   operator=                             Copy assignment operator is deleted
   [deleted]                             \fI(public member function)\fP
.SH Public member functions
   allocate                              Allocate memory
                                         \fI(public member function)\fP
   deallocate                            Deallocate memory
                                         \fI(public member function)\fP
   construct                             Constructs an object in allocated storage
                                         \fI(public member function)\fP
   destroy                               Destroys an object in allocated storage
                                         \fI(public member function)\fP
   allocate_bytes                        Allocate raw aligned memory from the underlying resource
   (C++20)                               \fI(public member function)\fP
   deallocate_bytes                      Free raw memory obtained from allocate_bytes
   (C++20)                               \fI(public member function)\fP
   allocate_object                       Allocates raw memory suitable for an object or an array
   (C++20)                               \fI(public member function)\fP
   deallocate_object                     Frees raw memory obtained by allocate_object
   (C++20)                               \fI(public member function)\fP
   new_object                            Allocates and constructs an object
   (C++20)                               \fI(public member function)\fP
   delete_object                         Destroys and deallocates an object
   (C++20)                               \fI(public member function)\fP
   select_on_container_copy_construction Create a new polymorphic_allocator for use by a container's copy constructor
                                         \fI(public member function)\fP
   resource                              Returns a pointer to the underlying memory resource
                                         \fI(public member function)\fP

.SH Non-member functions

   operator== compare two polymorphic_allocators
   operator!= \fI(function)\fP

.SH Notes

   polymorphic_allocator does not propagate on container copy assignment, move assignment, or swap. As a result, move assignment of a polymorphic_allocator-using container can throw, and swapping two polymorphic_allocator-using containers whose allocators do not compare equal results in undefined behavior.

.SH See also

   memory_resource an abstract interface for classes that encapsulate memory resources
   \fI(C++17)\fP         \fI(class)\fP
