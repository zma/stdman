.TH std::ostream_iterator 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ostream_iterator \- std::ostream_iterator

.SH Synopsis

  Defined in header <iterator>
  template< class T,
  class CharT = char,
  class Traits = std::char_traits<CharT> >                                 \fI(until C++17)\fP
  class ostream_iterator : public std::iterator<std::output_iterator_tag,
  void, void, void, void>
  template< class T,
  class CharT = char,                                                      \fI(since C++17)\fP
  class Traits = std::char_traits<CharT>>
  class ostream_iterator;

  std::ostream_iterator is a single-pass LegacyOutputIterator that writes successive objects of type T into the std::basic_ostream object for which it was constructed, using operator<<. Optional delimiter string is written to the output stream after every write operation. The write operation is performed when the iterator (whether dereferenced or not) is assigned to. Incrementing the std::ostream_iterator is a no-op.
  In a typical implementation, the only data members of std::ostream_iterator are a pointer to the associated std::basic_ostream and a pointer to the first character in the delimiter string.
  When writing characters, std::ostreambuf_iterator is more efficient, since it avoids the overhead of constructing and destructing the sentry object once per character.

.SH Member types


  Member type  Definition
  char_type    CharT
  traits_type  Traits
  ostream_type std::basic_ostream<CharT, Traits>


.SH Member functions


                  constructs a new ostream_iterator
  constructor     \fI(public member function)\fP
                  destructs an ostream_iterator
  destructor      \fI(public member function)\fP
                  writes a object to the associated output sequence
  operator=       \fI(public member function)\fP
                  no-op
  operator*       \fI(public member function)\fP
                  no-op
  operator++      \fI(public member function)\fP
  operator++(int)


.SH Member types


  Member type       Definition
  value_type        void
  difference_type   void
  pointer           void
  reference         void
  iterator_category std::output_iterator_tag


  These member types are required to be obtained by inheriting from std::iterator<std::output_iterator_tag, void, void, void, void>. \fI(until C++17)\fP


.SH Example

  
// Run this code

    #include <iostream>
    #include <sstream>
    #include <iterator>
    #include <numeric>

    int main()
    {
        std::istringstream str("0.1 0.2 0.3 0.4");
        std::partial_sum(std::istream_iterator<double>(str),
                          std::istream_iterator<double>(),
                          std::ostream_iterator<double>(std::cout, " "));
    }

.SH Output:

    0.1 0.3 0.6 1


.SH See also


                                    output iterator that writes to std::basic_streambuf
  ostreambuf_iterator               \fI(class template)\fP
                                    input iterator that reads from std::basic_istream
  istream_iterator                  \fI(class template)\fP

  std::experimental::ostream_joiner An output iterator that writes successive elements into an output stream, separating adjacent elements with a delimiter
                                    \fI(class template)\fP
  (library fundamentals TS v2)




