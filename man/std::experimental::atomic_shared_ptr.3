.TH std::experimental::atomic_shared_ptr 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::atomic_shared_ptr \- std::experimental::atomic_shared_ptr

.SH Synopsis

  Defined in header <experimental/atomic>
  template < class T >                     (concurrency TS)
  class atomic_shared_ptr;

  The class template atomic_shared_ptr provides thread-safe atomic pointer operations over a std::shared_ptr. It provides a better alternative to the_non-member_shared_ptr_atomic_access_functions.

.SH Member functions


                          constructs an atomic_shared_ptr object
  constructor             \fI(public member function)\fP
                          stores a value into an atomic_shared_ptr object
  operator=               \fI(public member function)\fP
                          checks if the atomic_shared_ptr object is lock-free
  is_lock_free            \fI(public member function)\fP
                          atomically replaces the value of the atomic object with a non-atomic argument
  store                   \fI(public member function)\fP
                          atomically obtains the value of the atomic object
  load                    \fI(public member function)\fP
                          loads a value from an atomic object
  operator_shared_ptr<T>  \fI(public member function)\fP
                          atomically replaces the value of the atomic object and obtains the value held previously
  exchange                \fI(public member function)\fP
                          atomically compares the value of the atomic object with non-atomic argument and performs atomic exchange if equal or atomic load if not
  compare_exchange_weak   \fI(public member function)\fP
  compare_exchange_strong




