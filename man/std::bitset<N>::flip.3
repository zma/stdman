.TH std::bitset<N>::flip 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::bitset<N>::flip \- std::bitset<N>::flip

.SH Synopsis

bitset<N>& flip();                          \fI(until C++11)\fP
bitset<N>& flip() noexcept;         \fB(1)\fP     \fI(since C++11)\fP
bitset<N>& flip( std::size_t pos );     \fB(2)\fP

Flips bits, i.e. changes true values to false and false values to true. Equivalent to a logical NOT operation on part or all of the bitset.
1) Flips all bits (like operator~, but in-place)
2) Flips the bit at the position pos.

.SH Parameters


pos - the position of the bit to flip


.SH Return value

*this

.SH Exceptions

2) throws std::out_of_range if pos does not correspond to a valid position within the bitset.

.SH Example


// Run this code

  #include <iostream>
  #include <bitset>

  int main()
  {
      std::bitset<4> b;

      std::cout << b << "\\n";
      std::cout << b.flip(0) << '\\n';
      std::cout << b.flip(2) << '\\n';
      std::cout << b.flip() << '\\n';
  }

.SH Output:

  0000
  0001
  0101
  1010


.SH See also


           sets bits to true or given value
set        \fI(public member function)\fP
           sets bits to false
reset      \fI(public member function)\fP

operator&= performs binary AND, OR, XOR and NOT
operator|= \fI(public member function)\fP
operator^=
operator~




