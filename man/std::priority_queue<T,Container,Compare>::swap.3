.TH std::priority_queue<T,Container,Compare>::swap 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::priority_queue<T,Container,Compare>::swap \- std::priority_queue<T,Container,Compare>::swap

.SH Synopsis
   void swap( priority_queue& other ) noexcept(/* see below */);  \fI(since C++11)\fP

   Exchanges the contents of the container adaptor with those of other. Effectively calls using std::swap; swap(c, other.c); swap(comp, other.comp);

.SH Parameters

   other - container adaptor to exchange the contents with

.SH Return value

   \fI(none)\fP

.SH Exceptions

   noexcept specification:
   noexcept(noexcept(swap(c, other.c)) && noexcept(swap(comp, other.comp)))                                                                   \fI(until C++17)\fP

   In the expression above, the identifier swap is looked up in the same manner as the one used by the C++17 std::is_nothrow_swappable trait.
   noexcept specification:                                                                                                                    \fI(since C++17)\fP
   noexcept(std::is_nothrow_swappable<Container>::value && std::is_nothrow_swappable<Compare>::value)

.SH Complexity

   Same as underlying container (typically constant)

  Defect reports

   The following behavior-changing defect reports were applied retroactively to previously published C++ standards.

      DR    Applied to          Behavior as published           Correct behavior
   LWG 2456 C++11      the noexcept specification is ill-formed made to work

.SH See also

   std::swap(std::priority_queue) specializes the std::swap algorithm
                                  \fI(function template)\fP
