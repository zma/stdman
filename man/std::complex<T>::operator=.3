.TH std::complex<T>::operator= 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::complex<T>::operator= \- std::complex<T>::operator=

.SH Synopsis

primary template complex<T>
complex& operator=(const T& x);                                  \fI(until C++20)\fP
constexpr complex& operator=(const T& x);                        \fI(since C++20)\fP
specialization complex<float>
complex& operator=(float x);                                                   \fI(until C++20)\fP
constexpr complex& operator=(float x);                                         \fI(since C++20)\fP
specialization complex<double>
complex& operator=(double x);                                                                \fI(until C++20)\fP
constexpr complex& operator=(double x);                                                      \fI(since C++20)\fP
specialization complex<long double>                      \fB(1)\fP
complex& operator=(long double x);                                                                         \fI(until C++20)\fP
constexpr complex& operator=(long double x);                 \fB(1)\fP                                           \fI(since C++20)\fP
all specializations                                              \fB(1)\fP
complex& operator=(const complex& cx);                                                                                   \fI(until C++20)\fP
constexpr complex& operator=(const complex& cx);                               \fB(1)\fP                                       \fI(since C++20)\fP
template<class X>                                                                            \fB(2)\fP                                       \fI(until C++20)\fP
complex& operator=(const std::complex<X>& cx);                                                             \fB(3)\fP
template<class X>                                                                                                                      \fI(since C++20)\fP
constexpr complex& operator=(const std::complex<X>& cx);

Assigns new values to the contents.
1) Assigns x to the real part of the complex number. Imaginary part is set to zero.
2,3) Assigns cx.real() and cx.imag() to the real and the imaginary parts of the complex number respectively.

.SH Parameters


x  - value to assign
cx - complex value to assign


.SH Return value

*this

.SH See also


              constructs a complex number
constructor   \fI(public member function)\fP

operator""if
operator""i   A std::complex literal representing pure imaginary number
operator""il  \fI(function)\fP

\fI(C++14)\fP




