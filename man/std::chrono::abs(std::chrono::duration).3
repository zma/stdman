.TH std::chrono::abs(std::chrono::duration) 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::abs(std::chrono::duration) \- std::chrono::abs(std::chrono::duration)

.SH Synopsis

Defined in header <chrono>
template <class Rep, class Period>                            \fI(since C++17)\fP
constexpr duration<Rep, Period> abs(duration<Rep, Period> d)

Returns the absolute value of the duration d. Specifically, if d >= d.zero(), return d, otherwise return -d.
The function does not participate in the overload resolution unless std::numeric_limits<Rep>::is_signed is true.

.SH Parameters


d - duration


.SH Return value

Absolute value of d

.SH Possible implementation



  template <class Rep, class Period, class = std::enable_if_t<
     std::chrono::duration<Rep, Period>::min() < std::chrono::duration<Rep, Period>::zero()>>
  constexpr std::chrono::duration<Rep, Period> abs(duration<Rep, Period> d)
  {
      return d >= d.zero() ? d : -d;
  }



.SH Example


 This section is incomplete
 Reason: no example


.SH See also


          implements unary + and unary -
operator+ \fI(public member function)\fP
operator-

abs(int)
labs
llabs     computes absolute value of an integral value (|x|)
          \fI(function)\fP


\fI(C++11)\fP




