.TH std::experimental::basic_string_view<CharT,Traits>::operator[] 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::basic_string_view<CharT,Traits>::operator[] \- std::experimental::basic_string_view<CharT,Traits>::operator[]

.SH Synopsis

  constexpr const_reference operator[](size_type pos) const;  (library fundamentals TS)

  Returns a const reference to the character at specified location pos.
  No bounds checking is performed: the behavior is undefined if pos >= size().

.SH Parameters


  pos - position of the character to return


.SH Return value

  Const reference to the requested character

.SH Exceptions

  Does not throw

.SH Complexity

  Constant.

.SH Notes

  Unlike std::basic_string::operator[], basic_string_view::operator[](size()) has undefined behavior instead of returning CharT().

.SH Example

  
// Run this code

    #include <iostream>
    #include <experimental/string_view>
    int main()
    {
        std::string str = "Exemplar";
        std::experimental::string_view v = str;
        std::cout << v[2] << '\\n';
    //  v[2] = 'y'; // Error: cannot modify through a string view
        str[2] = 'y';
        std::cout << v[2] << '\\n';
    }

.SH Output:

    e
    y


.SH See also


     access specified character with bounds checking
  at \fI(public member function)\fP




