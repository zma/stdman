.TH std::tm 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::tm \- std::tm

.SH Synopsis
   Defined in header <ctime>
   struct tm;

   Structure holding a calendar date and time broken down into its components.

.SH Member objects

   int tm_sec   seconds after the minute – [0, 61]\fI(until C++11)\fP / [0, 60] \fI(since C++11)\fP^[note 1]
                \fI(public member object)\fP
   int tm_min   minutes after the hour – [0, 59]
                \fI(public member object)\fP
   int tm_hour  hours since midnight – [0, 23]
                \fI(public member object)\fP
   int tm_mday  day of the month – [1, 31]
                \fI(public member object)\fP
   int tm_mon   months since January – [0, 11]
                \fI(public member object)\fP
   int tm_year  years since 1900
                \fI(public member object)\fP
   int tm_wday  days since Sunday – [0, 6]
                \fI(public member object)\fP
   int tm_yday  days since January 1 – [0, 365]
                \fI(public member object)\fP
   int tm_isdst Daylight Saving Time flag. The value is positive if DST is in effect, zero if not and negative if no information is available
                \fI(public member object)\fP

.SH Notes

    1. ↑ Range allows for a positive leap second. Two leap seconds in the same minute are not allowed (the range 0..61 was a defect introduced in C89 and corrected in C99)

.SH See also

   localtime converts time since epoch to calendar time expressed as local time
             \fI(function)\fP
   gmtime    converts time since epoch to calendar time expressed as Universal Coordinated Time
             \fI(function)\fP
