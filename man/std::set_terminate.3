.TH std::set_terminate 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::set_terminate \- std::set_terminate

.SH Synopsis

  Defined in header <exception>
  std::terminate_handler set_terminate( std::terminate_handler f ) throw();   \fI(until C++11)\fP
  std::terminate_handler set_terminate( std::terminate_handler f ) noexcept;  \fI(since C++11)\fP

  Makes f the new global terminate handler function and returns the previously installed std::terminate_handler.

  This function is thread-safe. Every call to std::set_terminate synchronizes-with (see std::memory_order) the subsequent std::set_terminate and std::get_terminate \fI(since C++11)\fP


.SH Parameters


  f - pointer to function of type std::terminate_handler, or null pointer


.SH Return value

  The previously-installed terminate handler, or a null pointer value if none was installed.

.SH Example

  
// Run this code

    #include <iostream>
    #include <cstdlib>
    #include <exception>

    int main()
    {
        std::set_terminate([](){ std::cout << "Unhandled exception\\n"; std::abort();});
        throw 1;
    }

.SH Possible output:

    Unhandled exception
    bash: line 7:  7743 Aborted                 (core dumped) ./a.out


.SH See also


                    function called when exception handling fails
  terminate         \fI(function)\fP

  get_terminate     obtains the current terminate_handler
                    \fI(function)\fP
  \fI(C++11)\fP
                    the type of the function called by std::terminate
  terminate_handler \fI(typedef)\fP




