.TH std::atomic<T>::load 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::atomic<T>::load \- std::atomic<T>::load

.SH Synopsis

T load( std::memory_order order = std::memory_order_seq_cst ) const noexcept;           \fI(since C++11)\fP
T load( std::memory_order order = std::memory_order_seq_cst ) const volatile noexcept;

Atomically loads and returns the current value of the atomic variable. Memory is affected according to the value of order.
order must be one of std::memory_order_relaxed, std::memory_order_consume, std::memory_order_acquire or std::memory_order_seq_cst. Otherwise the behavior is undefined.

.SH Parameters


order - memory order constraints to enforce


.SH Return value

The current value of the atomic variable.


.SH See also


                     loads a value from an atomic object
operator_T           \fI(public member function)\fP

atomic_load
atomic_load_explicit atomically obtains the value stored in an atomic object
                     \fI(function template)\fP
\fI(C++11)\fP
\fI(C++11)\fP




