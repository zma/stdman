.TH std::tuple_element<std::experimental::ranges::tagged> 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::tuple_element<std::experimental::ranges::tagged> \- std::tuple_element<std::experimental::ranges::tagged>

.SH Synopsis
   template< std::size_t N, class Base, class... Tags >

   struct tuple_element<N, std::experimental::ranges::tagged<Base, Tags...>>  (ranges TS)

   : std::tuple_element<N, Base> { };

   The partial specialization of std::tuple_element for tagged provide compile-time access to the types of the tagged's elements, using tuple-like syntax. It simply forwards to std::tuple_element<N, Base>.

.SH Member types

   Member type Definition
   type        std::tuple_element_t<N, Base>

.SH See also

   tuple_element                                      obtains the type of the specified element
                                                      \fI(class template specialization)\fP
   std::tuple_element<std::array>                     obtains the type of the elements of array
                                                      \fI(class template specialization)\fP
   std::tuple_element<std::pair>                      obtains the type of the elements of pair
   \fI(C++11)\fP                                            \fI(class template specialization)\fP
   std::tuple_size<std::experimental::ranges::tagged> obtains the size of a tagged
                                                      \fI(class template specialization)\fP
