.TH std::unordered_set<Key,Hash,KeyEqual,Allocator>::max_size 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::unordered_set<Key,Hash,KeyEqual,Allocator>::max_size \- std::unordered_set<Key,Hash,KeyEqual,Allocator>::max_size

.SH Synopsis

  size_type max_size() const noexcept;  \fI(since C++11)\fP

  Returns the maximum number of elements the container is able to hold due to system or library implementation limitations, i.e. std::distance(begin(), end()) for the largest container.

.SH Parameters

  \fI(none)\fP

.SH Return value

  Maximum number of elements.

.SH Complexity

  Constant.

.SH Notes

  This value typically reflects the theoretical limit on the size of the container, at most std::numeric_limits<difference_type>::max(). At runtime, the size of the container may be limited to a value smaller than max_size() by the amount of RAM available.

.SH Example

  
// Run this code

    #include <iostream>
    #include <unordered_set>

    int main()
    {
        std::unordered_set<char> s;
        std::cout << "Maximum size of a 'unordered_set' is " << s.max_size() << "\\n";
    }

.SH Possible output:

    Maximum size of a 'unordered_set' is 768614336404564650


.SH See also


       returns the number of elements
  size \fI(public member function)\fP




