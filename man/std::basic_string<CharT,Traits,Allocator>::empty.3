.TH std::basic_string<CharT,Traits,Allocator>::empty 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_string<CharT,Traits,Allocator>::empty \- std::basic_string<CharT,Traits,Allocator>::empty

.SH Synopsis
   bool empty() const;                         \fI(until C++11)\fP
   bool empty() const noexcept;                \fI(since C++11)\fP
                                               \fI(until C++20)\fP
   [[nodiscard]] bool empty() const noexcept;  \fI(since C++20)\fP

   Checks if the string has no characters, i.e. whether begin() == end().

.SH Parameters

   \fI(none)\fP

.SH Return value

   true if the string is empty, false otherwise

.SH Complexity

   Constant.

.SH Example

   
// Run this code

 #include <iostream>
 #include <string>

 int main()
 {
     std::string s;
     std::boolalpha(std::cout);
     std::cout << "s.empty():" << s.empty() << "\\t s:'" << s << "'\\n";

     s = "Exemplar";
     std::cout << "s.empty():" << s.empty() << "\\t s:'" << s << "'\\n";

     s = "";
     std::cout << "s.empty():" << s.empty() << "\\t s:'" << s << "'\\n";
 }

.SH Output:

 s.empty():true   s:''
 s.empty():false  s:'Exemplar'
 s.empty():true   s:''

.SH See also

   size   returns the number of characters
   length \fI(public member function)\fP
