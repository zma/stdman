.TH std::chrono::time_point<Clock,Duration>::min 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::time_point<Clock,Duration>::min \- std::chrono::time_point<Clock,Duration>::min

.SH Synopsis

static constexpr time_point min();           \fI(until C++20)\fP
static constexpr time_point min() noexcept;  \fI(since C++20)\fP

Returns a time_point with the smallest possible duration, i.e. time_point(std::chrono::duration::min()).

.SH Parameters

\fI(none)\fP

.SH Return value

the smallest possible time_point

.SH Example


// Run this code

  #include <iostream>
  #include <ratio>
  #include <chrono>

  constexpr auto steady_min = std::chrono::steady_clock::time_point::min();

  int main()
  {
      auto last_frame = steady_min;
      std::chrono::duration<float, std::milli> game_time {0.0F};

      for (std::size_t count = 0; count < 5; ++count) {
          auto current_frame = std::chrono::steady_clock::now();
          // initialize timer if first frame ever:
          if (last_frame == steady_min)
              last_frame = current_frame;
          game_time += current_frame - last_frame;
          std::cout << "Drawing frame at " << game_time.count() << " ms\\n";
          // animate frame at time offset game_time ...
      }
  }

.SH Possible output:

  Drawing frame at 0 ms
  Drawing frame at 0.17551 ms
  Drawing frame at 0.358325 ms
  Drawing frame at 0.545384 ms
  Drawing frame at 0.736717 ms




