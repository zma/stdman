.TH std::swap(std::priority_queue) 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::swap(std::priority_queue) \- std::swap(std::priority_queue)

.SH Synopsis
   template< class T, class Container, class Compare >

   void swap( priority_queue<T,Container,Compare>& lhs,                   \fI(until C++17)\fP

   priority_queue<T,Container,Compare>& rhs );
   template< class T, class Container, class Compare >

   void swap( priority_queue<T,Container,Compare>& lhs,                   \fI(since C++17)\fP

   priority_queue<T,Container,Compare>& rhs ) noexcept(/* see below */);

   Specializes the std::swap algorithm for std::priority_queue. Swaps the contents of lhs and rhs. Calls lhs.swap(rhs).

   This overload only participates in overload resolution if std::is_swappable<Container>::value and std::is_swappable<Compare>::value are both true. \fI(since C++17)\fP

.SH Parameters

   lhs, rhs - containers whose contents to swap

.SH Return value

   \fI(none)\fP

.SH Complexity

   Same as swapping the underlying container.

.SH Exceptions

   noexcept specification:           \fI(since C++17)\fP
   noexcept(noexcept(lhs.swap(rhs)))

.SH See also

   swap swaps the contents
        \fI(public member function)\fP
