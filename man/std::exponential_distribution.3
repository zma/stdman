.TH std::exponential_distribution 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::exponential_distribution \- std::exponential_distribution

.SH Synopsis

  Defined in header <random>
  template< class RealType = double >  \fI(since C++11)\fP
  class exponential_distribution;

  Produces random non-negative floating-point values x, distributed according to probability density function:

        P(x|位) = 位e-位x

  The value obtained is the time/distance until the next random event if random events occur at constant rate 位 per unit of time/distance. For example, this distribution describes the time between the clicks of a Geiger counter or the distance between point mutations in a DNA strand.
  This is the continuous counterpart of std::geometric_distribution
  std::exponential_distribution satisfies RandomNumberDistribution

.SH Template parameters


  RealType - The result type generated by the generator. The effect is undefined if this is not one of float, double, or long double.



.SH Member types


  Member type Definition
  result_type RealType
  param_type  the type of the parameter set, see RandomNumberDistribution.


.SH Member functions


                constructs new distribution
  constructor   \fI(public member function)\fP
                resets the internal state of the distribution
  reset         \fI(public member function)\fP

.SH Generation

                generates the next random number in the distribution
  operator()    \fI(public member function)\fP

.SH Characteristics

                returns the lambda distribution parameter (rate of events)
  lambda        \fI(public member function)\fP
                gets or sets the distribution parameter object
  param         \fI(public member function)\fP
                returns the minimum potentially generated value
  min           \fI(public member function)\fP
                returns the maximum potentially generated value
  max           \fI(public member function)\fP


.SH Non-member functions


             compares two distribution objects
  operator== \fI(function)\fP
  operator!=
             performs stream input and output on pseudo-random number distribution
  operator<< \fI(function template)\fP
  operator>>


.SH Notes

  Some implementations may occasionally return infinity if RealType is float. This is LWG_issue_2524

.SH Example

  
// Run this code

    #include <iostream>
    #include <iomanip>
    #include <string>
    #include <map>
    #include <random>
    int main()
    {
        std::random_device rd;
        std::mt19937 gen(rd());

        // if particles decay once per second on average,
        // how much time, in seconds, until the next one?
        std::exponential_distribution<> d(1);

        std::map<int, int> hist;
        for(int n=0; n<10000; ++n) {
            ++hist[2*d(gen)];
        }
        for(auto p : hist) {
            std::cout << std::fixed << std::setprecision(1)
                      << p.first/2.0 << '-' << (p.first+1)/2.0 <<
                    ' ' << std::string(p.second/200, '*') << '\\n';
        }
    }

.SH Possible output:

    0.0-0.5 *******************
    0.5-1.0 ***********
    1.0-1.5 *******
    1.5-2.0 ****
    2.0-2.5 **
    2.5-3.0 *
    3.0-3.5
    3.5-4.0


.SH External links

  Weisstein,_Eric_W._"Exponential_Distribution." From MathWorld--A Wolfram Web Resource.



