.TH std::shared_lock<Mutex>::release 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::shared_lock<Mutex>::release \- std::shared_lock<Mutex>::release

.SH Synopsis
   mutex_type* release() noexcept;  \fI(since C++14)\fP

   Breaks the association of the associated mutex, if any, and *this.

   No locks are unlocked. If the *this held ownership of the associated mutex prior to the call, the caller is now responsible to unlock the mutex.

.SH Parameters

   \fI(none)\fP

.SH Return value

   Pointer to the associated mutex or NULL if there was no associated mutex.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   unlock  unlocks the associated mutex
           \fI(public member function)\fP
   release disassociates the associated mutex without unlocking it
           \fI(public member function of std::unique_lock<Mutex>)\fP
