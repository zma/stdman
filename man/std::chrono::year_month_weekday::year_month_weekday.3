.TH std::chrono::year_month_weekday::year_month_weekday 3 "2020.03.24" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::year_month_weekday::year_month_weekday \- std::chrono::year_month_weekday::year_month_weekday

.SH Synopsis

  year_month_weekday() = default;                                                       \fB(1)\fP \fI(since C++20)\fP
  constexpr year_month_weekday(const std::chrono::year& y, const std::chrono::month& m, \fB(2)\fP \fI(since C++20)\fP
  const std::chrono::weekday_indexed& wdi) noexcept;
  constexpr year_month_weekday(const std::chrono::sys_days& dp) noexcept;               \fB(3)\fP \fI(since C++20)\fP
  explicit constexpr year_month_weekday(const std::chrono::local_days& dp) noexcept;    \fB(4)\fP \fI(since C++20)\fP

  Constructs a year_month_weekday object.
  1) Default constructor leaves the fields uninitialized.
  2) Constructs a year_month_weekday object storing the year y, the month m, the weekday wdi.weekday() and the weekday index wdi.index().
  3) Constructs a year_month_weekday object corresponding to the date represented by dp. For any year_month_weekday object storing a valid date, converting it to sys_days and back yields the same value. This constructor defines an implicit conversion from sys_days to year_month_weekday.
  4) Constructs a year_month_weekday object corresponding to the date represented by dp. Equivalent to year_month_weekday(sys_days(dp.time_since_epoch())).

.SH Notes

  A year_month_weekday can also be created by combining one of the partial-date types std::chrono::year_month and std::chrono::month_weekday with the missing component (indexed weekday and year, respectively) using operator/.

.SH See also



  operator/ conventional syntax for Gregorian calendar date creation
            \fI(function)\fP
  (C++20)




